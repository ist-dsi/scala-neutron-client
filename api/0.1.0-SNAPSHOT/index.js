Index.PACKAGES = {"pt.tecnico.dsi.neutron" : [{"name" : "pt.tecnico.dsi.neutron.NeutronClient", "shortDescription" : "", "members_class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "pt\/tecnico\/dsi\/neutron\/NeutronClient.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (NeutronClient[F]) => Boolean, msg: => Any): NeutronClient[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/NeutronClient.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (NeutronClient[F]) => Boolean): NeutronClient[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/NeutronClient.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): NeutronClient[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/NeutronClient.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): NeutronClient[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/NeutronClient.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (NeutronClient[F], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "pt\/tecnico\/dsi\/neutron\/NeutronClient.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (NeutronClient[F], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "pt\/tecnico\/dsi\/neutron\/NeutronClient.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "quotas", "tail" : ": Quotas[F]", "member" : "pt.tecnico.dsi.neutron.NeutronClient.quotas", "link" : "pt\/tecnico\/dsi\/neutron\/NeutronClient.html#quotas:pt.tecnico.dsi.neutron.services.Quotas[F]", "kind" : "val"}, {"label" : "ports", "tail" : ": Ports[F]", "member" : "pt.tecnico.dsi.neutron.NeutronClient.ports", "link" : "pt\/tecnico\/dsi\/neutron\/NeutronClient.html#ports:pt.tecnico.dsi.neutron.services.Ports[F]", "kind" : "val"}, {"label" : "subnets", "tail" : ": Subnets[F]", "member" : "pt.tecnico.dsi.neutron.NeutronClient.subnets", "link" : "pt\/tecnico\/dsi\/neutron\/NeutronClient.html#subnets:pt.tecnico.dsi.neutron.services.Subnets[F]", "kind" : "val"}, {"label" : "networks", "tail" : ": Networks[F]", "member" : "pt.tecnico.dsi.neutron.NeutronClient.networks", "link" : "pt\/tecnico\/dsi\/neutron\/NeutronClient.html#networks:pt.tecnico.dsi.neutron.services.Networks[F]", "kind" : "val"}, {"label" : "uri", "tail" : ": Uri", "member" : "pt.tecnico.dsi.neutron.NeutronClient.uri", "link" : "pt\/tecnico\/dsi\/neutron\/NeutronClient.html#uri:org.http4s.Uri", "kind" : "val"}, {"member" : "pt.tecnico.dsi.neutron.NeutronClient#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pt\/tecnico\/dsi\/neutron\/NeutronClient.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pt\/tecnico\/dsi\/neutron\/NeutronClient.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pt\/tecnico\/dsi\/neutron\/NeutronClient.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pt\/tecnico\/dsi\/neutron\/NeutronClient.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pt\/tecnico\/dsi\/neutron\/NeutronClient.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pt\/tecnico\/dsi\/neutron\/NeutronClient.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pt\/tecnico\/dsi\/neutron\/NeutronClient.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/NeutronClient.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/NeutronClient.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/NeutronClient.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pt\/tecnico\/dsi\/neutron\/NeutronClient.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pt\/tecnico\/dsi\/neutron\/NeutronClient.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pt\/tecnico\/dsi\/neutron\/NeutronClient.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pt\/tecnico\/dsi\/neutron\/NeutronClient.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "pt\/tecnico\/dsi\/neutron\/NeutronClient.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pt\/tecnico\/dsi\/neutron\/NeutronClient.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "pt\/tecnico\/dsi\/neutron\/NeutronClient.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/NeutronClient.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/NeutronClient.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "pt\/tecnico\/dsi\/neutron\/NeutronClient.html", "kind" : "class"}], "pt" : [], "pt.tecnico.dsi" : [], "pt.tecnico.dsi.neutron.services" : [{"name" : "pt.tecnico.dsi.neutron.services.BulkCreate", "trait" : "pt\/tecnico\/dsi\/neutron\/services\/BulkCreate.html", "kind" : "trait", "members_trait" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "pt\/tecnico\/dsi\/neutron\/services\/BulkCreate.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (BulkCreate[F, T]) => Boolean, msg: => Any): BulkCreate[F, T]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/services\/BulkCreate.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (BulkCreate[F, T]) => Boolean): BulkCreate[F, T]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/services\/BulkCreate.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): BulkCreate[F, T]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/services\/BulkCreate.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): BulkCreate[F, T]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/services\/BulkCreate.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (BulkCreate[F, T], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "pt\/tecnico\/dsi\/neutron\/services\/BulkCreate.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (BulkCreate[F, T], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "pt\/tecnico\/dsi\/neutron\/services\/BulkCreate.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "create", "tail" : "(values: List[T.Create])(encoder: Encoder[T.Create], decoder: Decoder[T.Read]): F[List[T.Read]]", "member" : "pt.tecnico.dsi.neutron.services.BulkCreate.create", "link" : "pt\/tecnico\/dsi\/neutron\/services\/BulkCreate.html#create(values:List[T#Create])(implicitencoder:io.circe.Encoder[T#Create],implicitdecoder:io.circe.Decoder[T#Read]):F[List[T#Read]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pt\/tecnico\/dsi\/neutron\/services\/BulkCreate.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pt\/tecnico\/dsi\/neutron\/services\/BulkCreate.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pt\/tecnico\/dsi\/neutron\/services\/BulkCreate.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pt\/tecnico\/dsi\/neutron\/services\/BulkCreate.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pt\/tecnico\/dsi\/neutron\/services\/BulkCreate.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pt\/tecnico\/dsi\/neutron\/services\/BulkCreate.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pt\/tecnico\/dsi\/neutron\/services\/BulkCreate.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/services\/BulkCreate.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/services\/BulkCreate.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/services\/BulkCreate.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pt\/tecnico\/dsi\/neutron\/services\/BulkCreate.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pt\/tecnico\/dsi\/neutron\/services\/BulkCreate.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pt\/tecnico\/dsi\/neutron\/services\/BulkCreate.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pt\/tecnico\/dsi\/neutron\/services\/BulkCreate.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "pt\/tecnico\/dsi\/neutron\/services\/BulkCreate.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pt\/tecnico\/dsi\/neutron\/services\/BulkCreate.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "pt\/tecnico\/dsi\/neutron\/services\/BulkCreate.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/services\/BulkCreate.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/services\/BulkCreate.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "pt.tecnico.dsi.neutron.services.CrudService", "shortDescription" : "", "members_class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CrudService[F, T]) => Boolean, msg: => Any): CrudService[F, T]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CrudService[F, T]) => Boolean): CrudService[F, T]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): CrudService[F, T]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): CrudService[F, T]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (CrudService[F, T], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (CrudService[F, T], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "update", "tail" : "(id: String, value: Update, extraHeaders: Header*): F[Model]", "member" : "pt.tecnico.dsi.neutron.services.CrudService.update", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#update(id:String,value:CrudService.this.Update,extraHeaders:org.http4s.Header*):F[CrudService.this.Model]", "kind" : "def"}, {"label" : "Model", "tail" : "", "member" : "pt.tecnico.dsi.neutron.services.CrudService.Model", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#Model=T#Read", "kind" : "type"}, {"label" : "Update", "tail" : "", "member" : "pt.tecnico.dsi.neutron.services.CrudService.Update", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#Update=T#Update", "kind" : "type"}, {"label" : "Create", "tail" : "", "member" : "pt.tecnico.dsi.neutron.services.CrudService.Create", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#Create=T#Create", "kind" : "type"}, {"member" : "pt.tecnico.dsi.neutron.services.CrudService#<init>", "error" : "unsupported entity"}, {"label" : "delete", "tail" : "(id: String, extraHeaders: Header*): F[Unit]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.delete", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#delete(id:String,extraHeaders:org.http4s.Header*):F[Unit]", "kind" : "def"}, {"label" : "delete", "tail" : "(value: T.Read, extraHeaders: Header*): F[Unit]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.delete", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#delete(value:Model,extraHeaders:org.http4s.Header*):F[Unit]", "kind" : "def"}, {"label" : "apply", "tail" : "(id: String, extraHeaders: Header*): F[T.Read]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.apply", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#apply(id:String,extraHeaders:org.http4s.Header*):F[Model]", "kind" : "def"}, {"label" : "get", "tail" : "(id: String, extraHeaders: Header*): F[Option[T.Read]]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.get", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#get(id:String,extraHeaders:org.http4s.Header*):F[Option[Model]]", "kind" : "def"}, {"label" : "createHandleConflict", "tail" : "(value: T.Create, extraHeaders: Header*)(onConflict: F[T.Read]): F[T.Read]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.createHandleConflict", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#createHandleConflict(value:Create,extraHeaders:org.http4s.Header*)(onConflict:F[Model]):F[Model]", "kind" : "def"}, {"label" : "create", "tail" : "(value: T.Create, extraHeaders: Header*): F[T.Read]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.create", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#create(value:Create,extraHeaders:org.http4s.Header*):F[Model]", "kind" : "def"}, {"label" : "list", "tail" : "(query: Query, extraHeaders: Header*): Stream[F, T.Read]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.list", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#list(query:org.http4s.Query,extraHeaders:org.http4s.Header*):fs2.Stream[F,Model]", "kind" : "def"}, {"label" : "list", "tail" : "(extraHeaders: Header*): Stream[F, T.Read]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.list", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#list(extraHeaders:org.http4s.Header*):fs2.Stream[F,Model]", "kind" : "def"}, {"label" : "wrappedAt", "tail" : ": Option[String]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.wrappedAt", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#wrappedAt:Option[String]", "kind" : "val"}, {"label" : "uri", "tail" : ": Uri", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.uri", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#uri:org.http4s.Uri", "kind" : "val"}, {"label" : "pluralName", "tail" : ": String", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.pluralName", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#pluralName:String", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.name", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#name:String", "kind" : "val"}, {"label" : "delete", "tail" : "(uri: Uri, extraHeaders: Header*): F[Unit]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.delete", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#delete(uri:org.http4s.Uri,extraHeaders:org.http4s.Header*):F[Unit]", "kind" : "def"}, {"label" : "list", "tail" : "(wrappedAt: String, uri: Uri, query: Query, extraHeaders: Header*)(arg0: Decoder[R]): Stream[F, R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.list", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#list[R](wrappedAt:String,uri:org.http4s.Uri,query:org.http4s.Query,extraHeaders:org.http4s.Header*)(implicitevidence$21:io.circe.Decoder[R]):fs2.Stream[F,R]", "kind" : "def"}, {"label" : "postHandleConflict", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(onConflict: F[R])(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.postHandleConflict", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#postHandleConflict[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(onConflict:F[R])(implicitevidence$19:io.circe.Encoder[V],implicitevidence$20:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "post", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.post", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#post[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$17:io.circe.Encoder[V],implicitevidence$18:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "patch", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.patch", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#patch[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$15:io.circe.Encoder[V],implicitevidence$16:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "put", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.put", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#put[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$13:io.circe.Encoder[V],implicitevidence$14:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "getOption", "tail" : "(wrappedAt: Option[String], uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.getOption", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#getOption[R](wrappedAt:Option[String],uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$12:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "get", "tail" : "(wrappedAt: Option[String], uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.get", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#get[R](wrappedAt:Option[String],uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$11:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "expectOption", "tail" : "(wrappedAt: Option[String], method: Method with PermitsBody, uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectOption", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#expectOption[R](wrappedAt:Option[String],method:org.http4s.Methodwithorg.http4s.Method.PermitsBody,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$10:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "expect", "tail" : "(wrappedAt: Option[String], method: Method with PermitsBody, uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expect", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#expect[R](wrappedAt:Option[String],method:org.http4s.Methodwithorg.http4s.Method.PermitsBody,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$9:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "expectOption", "tail" : "(wrappedAt: Option[String], method: Method with PermitsBody, value: B, uri: Uri, extraHeaders: Header*)(arg0: Encoder[B], arg1: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectOption", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#expectOption[B,R](wrappedAt:Option[String],method:org.http4s.Methodwithorg.http4s.Method.PermitsBody,value:B,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$7:io.circe.Encoder[B],implicitevidence$8:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "expect", "tail" : "(wrappedAt: Option[String], method: Method with PermitsBody, value: B, uri: Uri, extraHeaders: Header*)(arg0: Encoder[B], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expect", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#expect[B,R](wrappedAt:Option[String],method:org.http4s.Methodwithorg.http4s.Method.PermitsBody,value:B,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$5:io.circe.Encoder[B],implicitevidence$6:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "expectOptionUnwrapped", "tail" : "(wrappedAt: Option[String], request: F[Request[F]])(arg0: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectOptionUnwrapped", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#expectOptionUnwrapped[R](wrappedAt:Option[String],request:F[org.http4s.Request[F]])(implicitevidence$4:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "expectUnwrapped", "tail" : "(wrappedAt: Option[String], request: F[Request[F]])(arg0: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectUnwrapped", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#expectUnwrapped[R](wrappedAt:Option[String],request:F[org.http4s.Request[F]])(implicitevidence$3:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "wrapped", "tail" : "(at: Option[String])(encoder: Encoder[R]): EntityEncoder[F, R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.wrapped", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#wrapped[R](at:Option[String])(implicitencoder:io.circe.Encoder[R]):org.http4s.EntityEncoder[F,R]", "kind" : "def"}, {"label" : "unwrapped", "tail" : "(at: Option[String])(decoder: Decoder[R]): EntityDecoder[F, R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.unwrapped", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#unwrapped[R](at:Option[String])(implicitdecoder:io.circe.Decoder[R]):org.http4s.EntityDecoder[F,R]", "kind" : "def"}, {"label" : "void", "tail" : ": EntityDecoder[F, Unit]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.void", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#void:org.http4s.EntityDecoder[F,Unit]", "kind" : "implicit val"}, {"label" : "jsonDecoder", "tail" : "(arg0: Decoder[A]): EntityDecoder[F, A]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.jsonDecoder", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#jsonDecoder[A](implicitevidence$2:io.circe.Decoder[A]):org.http4s.EntityDecoder[F,A]", "kind" : "implicit def"}, {"label" : "jsonEncoder", "tail" : "(arg0: Encoder[A]): EntityEncoder[F, A]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.jsonEncoder", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#jsonEncoder[A](implicitevidence$1:io.circe.Encoder[A]):org.http4s.EntityEncoder[F,A]", "kind" : "implicit def"}, {"label" : "jsonPrinter", "tail" : ": Printer", "member" : "pt.tecnico.dsi.openstack.common.services.Service.jsonPrinter", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#jsonPrinter:io.circe.Printer", "kind" : "val"}, {"label" : "dsl", "tail" : ": Http4sClientDsl[F]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.dsl", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#dsl:org.http4s.client.dsl.Http4sClientDsl[F]", "kind" : "val"}, {"label" : "F", "tail" : ": Sync[F]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.F", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#F:cats.effect.Sync[F]", "kind" : "implicit val"}, {"label" : "client", "tail" : ": Client[F]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.client", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#client:org.http4s.client.Client[F]", "kind" : "implicit val"}, {"label" : "authToken", "tail" : ": Header", "member" : "pt.tecnico.dsi.openstack.common.services.Service.authToken", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#authToken:org.http4s.Header", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "pt\/tecnico\/dsi\/neutron\/services\/CrudService.html", "kind" : "class"}, {"name" : "pt.tecnico.dsi.neutron.services.FloatingIps", "shortDescription" : "", "members_class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (FloatingIps[F]) => Boolean, msg: => Any): FloatingIps[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (FloatingIps[F]) => Boolean): FloatingIps[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): FloatingIps[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): FloatingIps[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (FloatingIps[F], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (FloatingIps[F], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "pt.tecnico.dsi.neutron.services.FloatingIps#<init>", "error" : "unsupported entity"}, {"label" : "update", "tail" : "(id: String, value: Update, extraHeaders: Header*): F[Model]", "member" : "pt.tecnico.dsi.neutron.services.CrudService.update", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#update(id:String,value:CrudService.this.Update,extraHeaders:org.http4s.Header*):F[CrudService.this.Model]", "kind" : "def"}, {"label" : "Model", "tail" : "", "member" : "pt.tecnico.dsi.neutron.services.CrudService.Model", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#Model=T#Read", "kind" : "type"}, {"label" : "Update", "tail" : "", "member" : "pt.tecnico.dsi.neutron.services.CrudService.Update", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#Update=T#Update", "kind" : "type"}, {"label" : "Create", "tail" : "", "member" : "pt.tecnico.dsi.neutron.services.CrudService.Create", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#Create=T#Create", "kind" : "type"}, {"label" : "delete", "tail" : "(id: String, extraHeaders: Header*): F[Unit]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.delete", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#delete(id:String,extraHeaders:org.http4s.Header*):F[Unit]", "kind" : "def"}, {"label" : "delete", "tail" : "(value: Read, extraHeaders: Header*): F[Unit]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.delete", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#delete(value:Model,extraHeaders:org.http4s.Header*):F[Unit]", "kind" : "def"}, {"label" : "apply", "tail" : "(id: String, extraHeaders: Header*): F[Read]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.apply", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#apply(id:String,extraHeaders:org.http4s.Header*):F[Model]", "kind" : "def"}, {"label" : "get", "tail" : "(id: String, extraHeaders: Header*): F[Option[Read]]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.get", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#get(id:String,extraHeaders:org.http4s.Header*):F[Option[Model]]", "kind" : "def"}, {"label" : "createHandleConflict", "tail" : "(value: models.FloatingIp.Create, extraHeaders: Header*)(onConflict: F[Read]): F[Read]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.createHandleConflict", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#createHandleConflict(value:Create,extraHeaders:org.http4s.Header*)(onConflict:F[Model]):F[Model]", "kind" : "def"}, {"label" : "create", "tail" : "(value: models.FloatingIp.Create, extraHeaders: Header*): F[Read]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.create", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#create(value:Create,extraHeaders:org.http4s.Header*):F[Model]", "kind" : "def"}, {"label" : "list", "tail" : "(query: Query, extraHeaders: Header*): Stream[F, Read]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.list", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#list(query:org.http4s.Query,extraHeaders:org.http4s.Header*):fs2.Stream[F,Model]", "kind" : "def"}, {"label" : "list", "tail" : "(extraHeaders: Header*): Stream[F, Read]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.list", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#list(extraHeaders:org.http4s.Header*):fs2.Stream[F,Model]", "kind" : "def"}, {"label" : "wrappedAt", "tail" : ": Option[String]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.wrappedAt", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#wrappedAt:Option[String]", "kind" : "val"}, {"label" : "uri", "tail" : ": Uri", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.uri", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#uri:org.http4s.Uri", "kind" : "val"}, {"label" : "pluralName", "tail" : ": String", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.pluralName", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#pluralName:String", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.name", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#name:String", "kind" : "val"}, {"label" : "delete", "tail" : "(uri: Uri, extraHeaders: Header*): F[Unit]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.delete", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#delete(uri:org.http4s.Uri,extraHeaders:org.http4s.Header*):F[Unit]", "kind" : "def"}, {"label" : "list", "tail" : "(wrappedAt: String, uri: Uri, query: Query, extraHeaders: Header*)(arg0: Decoder[R]): Stream[F, R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.list", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#list[R](wrappedAt:String,uri:org.http4s.Uri,query:org.http4s.Query,extraHeaders:org.http4s.Header*)(implicitevidence$21:io.circe.Decoder[R]):fs2.Stream[F,R]", "kind" : "def"}, {"label" : "postHandleConflict", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(onConflict: F[R])(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.postHandleConflict", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#postHandleConflict[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(onConflict:F[R])(implicitevidence$19:io.circe.Encoder[V],implicitevidence$20:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "post", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.post", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#post[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$17:io.circe.Encoder[V],implicitevidence$18:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "patch", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.patch", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#patch[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$15:io.circe.Encoder[V],implicitevidence$16:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "put", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.put", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#put[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$13:io.circe.Encoder[V],implicitevidence$14:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "getOption", "tail" : "(wrappedAt: Option[String], uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.getOption", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#getOption[R](wrappedAt:Option[String],uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$12:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "get", "tail" : "(wrappedAt: Option[String], uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.get", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#get[R](wrappedAt:Option[String],uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$11:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "expectOption", "tail" : "(wrappedAt: Option[String], method: Method with PermitsBody, uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectOption", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#expectOption[R](wrappedAt:Option[String],method:org.http4s.Methodwithorg.http4s.Method.PermitsBody,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$10:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "expect", "tail" : "(wrappedAt: Option[String], method: Method with PermitsBody, uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expect", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#expect[R](wrappedAt:Option[String],method:org.http4s.Methodwithorg.http4s.Method.PermitsBody,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$9:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "expectOption", "tail" : "(wrappedAt: Option[String], method: Method with PermitsBody, value: B, uri: Uri, extraHeaders: Header*)(arg0: Encoder[B], arg1: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectOption", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#expectOption[B,R](wrappedAt:Option[String],method:org.http4s.Methodwithorg.http4s.Method.PermitsBody,value:B,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$7:io.circe.Encoder[B],implicitevidence$8:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "expect", "tail" : "(wrappedAt: Option[String], method: Method with PermitsBody, value: B, uri: Uri, extraHeaders: Header*)(arg0: Encoder[B], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expect", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#expect[B,R](wrappedAt:Option[String],method:org.http4s.Methodwithorg.http4s.Method.PermitsBody,value:B,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$5:io.circe.Encoder[B],implicitevidence$6:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "expectOptionUnwrapped", "tail" : "(wrappedAt: Option[String], request: F[Request[F]])(arg0: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectOptionUnwrapped", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#expectOptionUnwrapped[R](wrappedAt:Option[String],request:F[org.http4s.Request[F]])(implicitevidence$4:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "expectUnwrapped", "tail" : "(wrappedAt: Option[String], request: F[Request[F]])(arg0: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectUnwrapped", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#expectUnwrapped[R](wrappedAt:Option[String],request:F[org.http4s.Request[F]])(implicitevidence$3:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "wrapped", "tail" : "(at: Option[String])(encoder: Encoder[R]): EntityEncoder[F, R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.wrapped", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#wrapped[R](at:Option[String])(implicitencoder:io.circe.Encoder[R]):org.http4s.EntityEncoder[F,R]", "kind" : "def"}, {"label" : "unwrapped", "tail" : "(at: Option[String])(decoder: Decoder[R]): EntityDecoder[F, R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.unwrapped", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#unwrapped[R](at:Option[String])(implicitdecoder:io.circe.Decoder[R]):org.http4s.EntityDecoder[F,R]", "kind" : "def"}, {"label" : "void", "tail" : ": EntityDecoder[F, Unit]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.void", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#void:org.http4s.EntityDecoder[F,Unit]", "kind" : "implicit val"}, {"label" : "jsonDecoder", "tail" : "(arg0: Decoder[A]): EntityDecoder[F, A]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.jsonDecoder", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#jsonDecoder[A](implicitevidence$2:io.circe.Decoder[A]):org.http4s.EntityDecoder[F,A]", "kind" : "implicit def"}, {"label" : "jsonEncoder", "tail" : "(arg0: Encoder[A]): EntityEncoder[F, A]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.jsonEncoder", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#jsonEncoder[A](implicitevidence$1:io.circe.Encoder[A]):org.http4s.EntityEncoder[F,A]", "kind" : "implicit def"}, {"label" : "jsonPrinter", "tail" : ": Printer", "member" : "pt.tecnico.dsi.openstack.common.services.Service.jsonPrinter", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#jsonPrinter:io.circe.Printer", "kind" : "val"}, {"label" : "dsl", "tail" : ": Http4sClientDsl[F]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.dsl", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#dsl:org.http4s.client.dsl.Http4sClientDsl[F]", "kind" : "val"}, {"label" : "F", "tail" : ": Sync[F]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.F", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#F:cats.effect.Sync[F]", "kind" : "implicit val"}, {"label" : "client", "tail" : ": Client[F]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.client", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#client:org.http4s.client.Client[F]", "kind" : "implicit val"}, {"label" : "authToken", "tail" : ": Header", "member" : "pt.tecnico.dsi.openstack.common.services.Service.authToken", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#authToken:org.http4s.Header", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "pt\/tecnico\/dsi\/neutron\/services\/FloatingIps.html", "kind" : "class"}, {"name" : "pt.tecnico.dsi.neutron.services.Networks", "shortDescription" : "", "members_class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Networks[F]) => Boolean, msg: => Any): Networks[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Networks[F]) => Boolean): Networks[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Networks[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Networks[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Networks[F], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Networks[F], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "pt.tecnico.dsi.neutron.services.Networks#<init>", "error" : "unsupported entity"}, {"label" : "create", "tail" : "(values: List[models.Network.Create])(encoder: Encoder[models.Network.Create], decoder: Decoder[Read]): F[List[Read]]", "member" : "pt.tecnico.dsi.neutron.services.BulkCreate.create", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#create(values:List[T#Create])(implicitencoder:io.circe.Encoder[T#Create],implicitdecoder:io.circe.Decoder[T#Read]):F[List[T#Read]]", "kind" : "def"}, {"label" : "update", "tail" : "(id: String, value: Update, extraHeaders: Header*): F[Model]", "member" : "pt.tecnico.dsi.neutron.services.CrudService.update", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#update(id:String,value:CrudService.this.Update,extraHeaders:org.http4s.Header*):F[CrudService.this.Model]", "kind" : "def"}, {"label" : "Model", "tail" : "", "member" : "pt.tecnico.dsi.neutron.services.CrudService.Model", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#Model=T#Read", "kind" : "type"}, {"label" : "Update", "tail" : "", "member" : "pt.tecnico.dsi.neutron.services.CrudService.Update", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#Update=T#Update", "kind" : "type"}, {"label" : "Create", "tail" : "", "member" : "pt.tecnico.dsi.neutron.services.CrudService.Create", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#Create=T#Create", "kind" : "type"}, {"label" : "delete", "tail" : "(id: String, extraHeaders: Header*): F[Unit]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.delete", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#delete(id:String,extraHeaders:org.http4s.Header*):F[Unit]", "kind" : "def"}, {"label" : "delete", "tail" : "(value: Read, extraHeaders: Header*): F[Unit]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.delete", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#delete(value:Model,extraHeaders:org.http4s.Header*):F[Unit]", "kind" : "def"}, {"label" : "apply", "tail" : "(id: String, extraHeaders: Header*): F[Read]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.apply", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#apply(id:String,extraHeaders:org.http4s.Header*):F[Model]", "kind" : "def"}, {"label" : "get", "tail" : "(id: String, extraHeaders: Header*): F[Option[Read]]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.get", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#get(id:String,extraHeaders:org.http4s.Header*):F[Option[Model]]", "kind" : "def"}, {"label" : "createHandleConflict", "tail" : "(value: models.Network.Create, extraHeaders: Header*)(onConflict: F[Read]): F[Read]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.createHandleConflict", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#createHandleConflict(value:Create,extraHeaders:org.http4s.Header*)(onConflict:F[Model]):F[Model]", "kind" : "def"}, {"label" : "create", "tail" : "(value: models.Network.Create, extraHeaders: Header*): F[Read]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.create", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#create(value:Create,extraHeaders:org.http4s.Header*):F[Model]", "kind" : "def"}, {"label" : "list", "tail" : "(query: Query, extraHeaders: Header*): Stream[F, Read]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.list", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#list(query:org.http4s.Query,extraHeaders:org.http4s.Header*):fs2.Stream[F,Model]", "kind" : "def"}, {"label" : "list", "tail" : "(extraHeaders: Header*): Stream[F, Read]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.list", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#list(extraHeaders:org.http4s.Header*):fs2.Stream[F,Model]", "kind" : "def"}, {"label" : "wrappedAt", "tail" : ": Option[String]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.wrappedAt", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#wrappedAt:Option[String]", "kind" : "val"}, {"label" : "uri", "tail" : ": Uri", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.uri", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#uri:org.http4s.Uri", "kind" : "val"}, {"label" : "pluralName", "tail" : ": String", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.pluralName", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#pluralName:String", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.name", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#name:String", "kind" : "val"}, {"label" : "delete", "tail" : "(uri: Uri, extraHeaders: Header*): F[Unit]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.delete", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#delete(uri:org.http4s.Uri,extraHeaders:org.http4s.Header*):F[Unit]", "kind" : "def"}, {"label" : "list", "tail" : "(wrappedAt: String, uri: Uri, query: Query, extraHeaders: Header*)(arg0: Decoder[R]): Stream[F, R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.list", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#list[R](wrappedAt:String,uri:org.http4s.Uri,query:org.http4s.Query,extraHeaders:org.http4s.Header*)(implicitevidence$21:io.circe.Decoder[R]):fs2.Stream[F,R]", "kind" : "def"}, {"label" : "postHandleConflict", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(onConflict: F[R])(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.postHandleConflict", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#postHandleConflict[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(onConflict:F[R])(implicitevidence$19:io.circe.Encoder[V],implicitevidence$20:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "post", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.post", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#post[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$17:io.circe.Encoder[V],implicitevidence$18:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "patch", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.patch", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#patch[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$15:io.circe.Encoder[V],implicitevidence$16:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "put", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.put", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#put[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$13:io.circe.Encoder[V],implicitevidence$14:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "getOption", "tail" : "(wrappedAt: Option[String], uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.getOption", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#getOption[R](wrappedAt:Option[String],uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$12:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "get", "tail" : "(wrappedAt: Option[String], uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.get", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#get[R](wrappedAt:Option[String],uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$11:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "expectOption", "tail" : "(wrappedAt: Option[String], method: Method with PermitsBody, uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectOption", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#expectOption[R](wrappedAt:Option[String],method:org.http4s.Methodwithorg.http4s.Method.PermitsBody,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$10:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "expect", "tail" : "(wrappedAt: Option[String], method: Method with PermitsBody, uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expect", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#expect[R](wrappedAt:Option[String],method:org.http4s.Methodwithorg.http4s.Method.PermitsBody,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$9:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "expectOption", "tail" : "(wrappedAt: Option[String], method: Method with PermitsBody, value: B, uri: Uri, extraHeaders: Header*)(arg0: Encoder[B], arg1: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectOption", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#expectOption[B,R](wrappedAt:Option[String],method:org.http4s.Methodwithorg.http4s.Method.PermitsBody,value:B,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$7:io.circe.Encoder[B],implicitevidence$8:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "expect", "tail" : "(wrappedAt: Option[String], method: Method with PermitsBody, value: B, uri: Uri, extraHeaders: Header*)(arg0: Encoder[B], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expect", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#expect[B,R](wrappedAt:Option[String],method:org.http4s.Methodwithorg.http4s.Method.PermitsBody,value:B,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$5:io.circe.Encoder[B],implicitevidence$6:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "expectOptionUnwrapped", "tail" : "(wrappedAt: Option[String], request: F[Request[F]])(arg0: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectOptionUnwrapped", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#expectOptionUnwrapped[R](wrappedAt:Option[String],request:F[org.http4s.Request[F]])(implicitevidence$4:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "expectUnwrapped", "tail" : "(wrappedAt: Option[String], request: F[Request[F]])(arg0: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectUnwrapped", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#expectUnwrapped[R](wrappedAt:Option[String],request:F[org.http4s.Request[F]])(implicitevidence$3:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "wrapped", "tail" : "(at: Option[String])(encoder: Encoder[R]): EntityEncoder[F, R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.wrapped", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#wrapped[R](at:Option[String])(implicitencoder:io.circe.Encoder[R]):org.http4s.EntityEncoder[F,R]", "kind" : "def"}, {"label" : "unwrapped", "tail" : "(at: Option[String])(decoder: Decoder[R]): EntityDecoder[F, R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.unwrapped", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#unwrapped[R](at:Option[String])(implicitdecoder:io.circe.Decoder[R]):org.http4s.EntityDecoder[F,R]", "kind" : "def"}, {"label" : "void", "tail" : ": EntityDecoder[F, Unit]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.void", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#void:org.http4s.EntityDecoder[F,Unit]", "kind" : "implicit val"}, {"label" : "jsonDecoder", "tail" : "(arg0: Decoder[A]): EntityDecoder[F, A]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.jsonDecoder", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#jsonDecoder[A](implicitevidence$2:io.circe.Decoder[A]):org.http4s.EntityDecoder[F,A]", "kind" : "implicit def"}, {"label" : "jsonEncoder", "tail" : "(arg0: Encoder[A]): EntityEncoder[F, A]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.jsonEncoder", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#jsonEncoder[A](implicitevidence$1:io.circe.Encoder[A]):org.http4s.EntityEncoder[F,A]", "kind" : "implicit def"}, {"label" : "jsonPrinter", "tail" : ": Printer", "member" : "pt.tecnico.dsi.openstack.common.services.Service.jsonPrinter", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#jsonPrinter:io.circe.Printer", "kind" : "val"}, {"label" : "dsl", "tail" : ": Http4sClientDsl[F]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.dsl", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#dsl:org.http4s.client.dsl.Http4sClientDsl[F]", "kind" : "val"}, {"label" : "F", "tail" : ": Sync[F]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.F", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#F:cats.effect.Sync[F]", "kind" : "implicit val"}, {"label" : "client", "tail" : ": Client[F]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.client", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#client:org.http4s.client.Client[F]", "kind" : "implicit val"}, {"label" : "authToken", "tail" : ": Header", "member" : "pt.tecnico.dsi.openstack.common.services.Service.authToken", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#authToken:org.http4s.Header", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "pt\/tecnico\/dsi\/neutron\/services\/Networks.html", "kind" : "class"}, {"name" : "pt.tecnico.dsi.neutron.services.Ports", "shortDescription" : "", "members_class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Ports[F]) => Boolean, msg: => Any): Ports[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Ports[F]) => Boolean): Ports[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Ports[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Ports[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Ports[F], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Ports[F], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "pt.tecnico.dsi.neutron.services.Ports#<init>", "error" : "unsupported entity"}, {"label" : "create", "tail" : "(values: List[models.Port.Create])(encoder: Encoder[models.Port.Create], decoder: Decoder[Read]): F[List[Read]]", "member" : "pt.tecnico.dsi.neutron.services.BulkCreate.create", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#create(values:List[T#Create])(implicitencoder:io.circe.Encoder[T#Create],implicitdecoder:io.circe.Decoder[T#Read]):F[List[T#Read]]", "kind" : "def"}, {"label" : "update", "tail" : "(id: String, value: Update, extraHeaders: Header*): F[Model]", "member" : "pt.tecnico.dsi.neutron.services.CrudService.update", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#update(id:String,value:CrudService.this.Update,extraHeaders:org.http4s.Header*):F[CrudService.this.Model]", "kind" : "def"}, {"label" : "Model", "tail" : "", "member" : "pt.tecnico.dsi.neutron.services.CrudService.Model", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#Model=T#Read", "kind" : "type"}, {"label" : "Update", "tail" : "", "member" : "pt.tecnico.dsi.neutron.services.CrudService.Update", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#Update=T#Update", "kind" : "type"}, {"label" : "Create", "tail" : "", "member" : "pt.tecnico.dsi.neutron.services.CrudService.Create", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#Create=T#Create", "kind" : "type"}, {"label" : "delete", "tail" : "(id: String, extraHeaders: Header*): F[Unit]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.delete", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#delete(id:String,extraHeaders:org.http4s.Header*):F[Unit]", "kind" : "def"}, {"label" : "delete", "tail" : "(value: Read, extraHeaders: Header*): F[Unit]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.delete", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#delete(value:Model,extraHeaders:org.http4s.Header*):F[Unit]", "kind" : "def"}, {"label" : "apply", "tail" : "(id: String, extraHeaders: Header*): F[Read]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.apply", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#apply(id:String,extraHeaders:org.http4s.Header*):F[Model]", "kind" : "def"}, {"label" : "get", "tail" : "(id: String, extraHeaders: Header*): F[Option[Read]]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.get", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#get(id:String,extraHeaders:org.http4s.Header*):F[Option[Model]]", "kind" : "def"}, {"label" : "createHandleConflict", "tail" : "(value: models.Port.Create, extraHeaders: Header*)(onConflict: F[Read]): F[Read]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.createHandleConflict", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#createHandleConflict(value:Create,extraHeaders:org.http4s.Header*)(onConflict:F[Model]):F[Model]", "kind" : "def"}, {"label" : "create", "tail" : "(value: models.Port.Create, extraHeaders: Header*): F[Read]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.create", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#create(value:Create,extraHeaders:org.http4s.Header*):F[Model]", "kind" : "def"}, {"label" : "list", "tail" : "(query: Query, extraHeaders: Header*): Stream[F, Read]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.list", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#list(query:org.http4s.Query,extraHeaders:org.http4s.Header*):fs2.Stream[F,Model]", "kind" : "def"}, {"label" : "list", "tail" : "(extraHeaders: Header*): Stream[F, Read]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.list", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#list(extraHeaders:org.http4s.Header*):fs2.Stream[F,Model]", "kind" : "def"}, {"label" : "wrappedAt", "tail" : ": Option[String]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.wrappedAt", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#wrappedAt:Option[String]", "kind" : "val"}, {"label" : "uri", "tail" : ": Uri", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.uri", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#uri:org.http4s.Uri", "kind" : "val"}, {"label" : "pluralName", "tail" : ": String", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.pluralName", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#pluralName:String", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.name", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#name:String", "kind" : "val"}, {"label" : "delete", "tail" : "(uri: Uri, extraHeaders: Header*): F[Unit]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.delete", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#delete(uri:org.http4s.Uri,extraHeaders:org.http4s.Header*):F[Unit]", "kind" : "def"}, {"label" : "list", "tail" : "(wrappedAt: String, uri: Uri, query: Query, extraHeaders: Header*)(arg0: Decoder[R]): Stream[F, R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.list", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#list[R](wrappedAt:String,uri:org.http4s.Uri,query:org.http4s.Query,extraHeaders:org.http4s.Header*)(implicitevidence$21:io.circe.Decoder[R]):fs2.Stream[F,R]", "kind" : "def"}, {"label" : "postHandleConflict", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(onConflict: F[R])(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.postHandleConflict", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#postHandleConflict[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(onConflict:F[R])(implicitevidence$19:io.circe.Encoder[V],implicitevidence$20:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "post", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.post", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#post[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$17:io.circe.Encoder[V],implicitevidence$18:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "patch", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.patch", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#patch[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$15:io.circe.Encoder[V],implicitevidence$16:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "put", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.put", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#put[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$13:io.circe.Encoder[V],implicitevidence$14:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "getOption", "tail" : "(wrappedAt: Option[String], uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.getOption", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#getOption[R](wrappedAt:Option[String],uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$12:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "get", "tail" : "(wrappedAt: Option[String], uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.get", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#get[R](wrappedAt:Option[String],uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$11:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "expectOption", "tail" : "(wrappedAt: Option[String], method: Method with PermitsBody, uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectOption", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#expectOption[R](wrappedAt:Option[String],method:org.http4s.Methodwithorg.http4s.Method.PermitsBody,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$10:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "expect", "tail" : "(wrappedAt: Option[String], method: Method with PermitsBody, uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expect", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#expect[R](wrappedAt:Option[String],method:org.http4s.Methodwithorg.http4s.Method.PermitsBody,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$9:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "expectOption", "tail" : "(wrappedAt: Option[String], method: Method with PermitsBody, value: B, uri: Uri, extraHeaders: Header*)(arg0: Encoder[B], arg1: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectOption", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#expectOption[B,R](wrappedAt:Option[String],method:org.http4s.Methodwithorg.http4s.Method.PermitsBody,value:B,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$7:io.circe.Encoder[B],implicitevidence$8:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "expect", "tail" : "(wrappedAt: Option[String], method: Method with PermitsBody, value: B, uri: Uri, extraHeaders: Header*)(arg0: Encoder[B], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expect", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#expect[B,R](wrappedAt:Option[String],method:org.http4s.Methodwithorg.http4s.Method.PermitsBody,value:B,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$5:io.circe.Encoder[B],implicitevidence$6:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "expectOptionUnwrapped", "tail" : "(wrappedAt: Option[String], request: F[Request[F]])(arg0: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectOptionUnwrapped", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#expectOptionUnwrapped[R](wrappedAt:Option[String],request:F[org.http4s.Request[F]])(implicitevidence$4:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "expectUnwrapped", "tail" : "(wrappedAt: Option[String], request: F[Request[F]])(arg0: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectUnwrapped", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#expectUnwrapped[R](wrappedAt:Option[String],request:F[org.http4s.Request[F]])(implicitevidence$3:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "wrapped", "tail" : "(at: Option[String])(encoder: Encoder[R]): EntityEncoder[F, R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.wrapped", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#wrapped[R](at:Option[String])(implicitencoder:io.circe.Encoder[R]):org.http4s.EntityEncoder[F,R]", "kind" : "def"}, {"label" : "unwrapped", "tail" : "(at: Option[String])(decoder: Decoder[R]): EntityDecoder[F, R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.unwrapped", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#unwrapped[R](at:Option[String])(implicitdecoder:io.circe.Decoder[R]):org.http4s.EntityDecoder[F,R]", "kind" : "def"}, {"label" : "void", "tail" : ": EntityDecoder[F, Unit]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.void", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#void:org.http4s.EntityDecoder[F,Unit]", "kind" : "implicit val"}, {"label" : "jsonDecoder", "tail" : "(arg0: Decoder[A]): EntityDecoder[F, A]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.jsonDecoder", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#jsonDecoder[A](implicitevidence$2:io.circe.Decoder[A]):org.http4s.EntityDecoder[F,A]", "kind" : "implicit def"}, {"label" : "jsonEncoder", "tail" : "(arg0: Encoder[A]): EntityEncoder[F, A]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.jsonEncoder", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#jsonEncoder[A](implicitevidence$1:io.circe.Encoder[A]):org.http4s.EntityEncoder[F,A]", "kind" : "implicit def"}, {"label" : "jsonPrinter", "tail" : ": Printer", "member" : "pt.tecnico.dsi.openstack.common.services.Service.jsonPrinter", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#jsonPrinter:io.circe.Printer", "kind" : "val"}, {"label" : "dsl", "tail" : ": Http4sClientDsl[F]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.dsl", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#dsl:org.http4s.client.dsl.Http4sClientDsl[F]", "kind" : "val"}, {"label" : "F", "tail" : ": Sync[F]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.F", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#F:cats.effect.Sync[F]", "kind" : "implicit val"}, {"label" : "client", "tail" : ": Client[F]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.client", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#client:org.http4s.client.Client[F]", "kind" : "implicit val"}, {"label" : "authToken", "tail" : ": Header", "member" : "pt.tecnico.dsi.openstack.common.services.Service.authToken", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#authToken:org.http4s.Header", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "pt\/tecnico\/dsi\/neutron\/services\/Ports.html", "kind" : "class"}, {"name" : "pt.tecnico.dsi.neutron.services.Quotas", "shortDescription" : "", "members_class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Quotas[F]) => Boolean, msg: => Any): Quotas[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Quotas[F]) => Boolean): Quotas[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Quotas[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Quotas[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Quotas[F], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Quotas[F], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "delete", "tail" : "(projectId: String): F[Unit]", "member" : "pt.tecnico.dsi.neutron.services.Quotas.delete", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#delete(projectId:String):F[Unit]", "kind" : "def"}, {"label" : "update", "tail" : "(projectId: String, quotas: Update)(encoder: Encoder[Update]): F[Quota]", "member" : "pt.tecnico.dsi.neutron.services.Quotas.update", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#update(projectId:String,quotas:pt.tecnico.dsi.neutron.models.Quota.Update)(implicitencoder:io.circe.Encoder[pt.tecnico.dsi.neutron.models.Quota.Update]):F[pt.tecnico.dsi.neutron.models.Quota]", "kind" : "def"}, {"label" : "getDefaults", "tail" : "(projectId: String): F[Quota]", "member" : "pt.tecnico.dsi.neutron.services.Quotas.getDefaults", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#getDefaults(projectId:String):F[pt.tecnico.dsi.neutron.models.Quota]", "kind" : "def"}, {"label" : "get", "tail" : "(projectId: String): F[Quota]", "member" : "pt.tecnico.dsi.neutron.services.Quotas.get", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#get(projectId:String):F[pt.tecnico.dsi.neutron.models.Quota]", "kind" : "def"}, {"label" : "list", "tail" : "(): Stream[F, (String, Quota)]", "member" : "pt.tecnico.dsi.neutron.services.Quotas.list", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#list:fs2.Stream[F,(String,pt.tecnico.dsi.neutron.models.Quota)]", "kind" : "def"}, {"label" : "name", "tail" : ": String", "member" : "pt.tecnico.dsi.neutron.services.Quotas.name", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#name:String", "kind" : "val"}, {"label" : "uri", "tail" : ": Uri", "member" : "pt.tecnico.dsi.neutron.services.Quotas.uri", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#uri:org.http4s.Uri", "kind" : "val"}, {"member" : "pt.tecnico.dsi.neutron.services.Quotas#<init>", "error" : "unsupported entity"}, {"label" : "delete", "tail" : "(uri: Uri, extraHeaders: Header*): F[Unit]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.delete", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#delete(uri:org.http4s.Uri,extraHeaders:org.http4s.Header*):F[Unit]", "kind" : "def"}, {"label" : "list", "tail" : "(wrappedAt: String, uri: Uri, query: Query, extraHeaders: Header*)(arg0: Decoder[R]): Stream[F, R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.list", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#list[R](wrappedAt:String,uri:org.http4s.Uri,query:org.http4s.Query,extraHeaders:org.http4s.Header*)(implicitevidence$21:io.circe.Decoder[R]):fs2.Stream[F,R]", "kind" : "def"}, {"label" : "postHandleConflict", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(onConflict: F[R])(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.postHandleConflict", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#postHandleConflict[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(onConflict:F[R])(implicitevidence$19:io.circe.Encoder[V],implicitevidence$20:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "post", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.post", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#post[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$17:io.circe.Encoder[V],implicitevidence$18:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "patch", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.patch", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#patch[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$15:io.circe.Encoder[V],implicitevidence$16:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "put", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.put", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#put[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$13:io.circe.Encoder[V],implicitevidence$14:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "getOption", "tail" : "(wrappedAt: Option[String], uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.getOption", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#getOption[R](wrappedAt:Option[String],uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$12:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "get", "tail" : "(wrappedAt: Option[String], uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.get", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#get[R](wrappedAt:Option[String],uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$11:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "expectOption", "tail" : "(wrappedAt: Option[String], method: Method with PermitsBody, uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectOption", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#expectOption[R](wrappedAt:Option[String],method:org.http4s.Methodwithorg.http4s.Method.PermitsBody,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$10:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "expect", "tail" : "(wrappedAt: Option[String], method: Method with PermitsBody, uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expect", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#expect[R](wrappedAt:Option[String],method:org.http4s.Methodwithorg.http4s.Method.PermitsBody,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$9:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "expectOption", "tail" : "(wrappedAt: Option[String], method: Method with PermitsBody, value: B, uri: Uri, extraHeaders: Header*)(arg0: Encoder[B], arg1: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectOption", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#expectOption[B,R](wrappedAt:Option[String],method:org.http4s.Methodwithorg.http4s.Method.PermitsBody,value:B,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$7:io.circe.Encoder[B],implicitevidence$8:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "expect", "tail" : "(wrappedAt: Option[String], method: Method with PermitsBody, value: B, uri: Uri, extraHeaders: Header*)(arg0: Encoder[B], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expect", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#expect[B,R](wrappedAt:Option[String],method:org.http4s.Methodwithorg.http4s.Method.PermitsBody,value:B,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$5:io.circe.Encoder[B],implicitevidence$6:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "expectOptionUnwrapped", "tail" : "(wrappedAt: Option[String], request: F[Request[F]])(arg0: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectOptionUnwrapped", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#expectOptionUnwrapped[R](wrappedAt:Option[String],request:F[org.http4s.Request[F]])(implicitevidence$4:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "expectUnwrapped", "tail" : "(wrappedAt: Option[String], request: F[Request[F]])(arg0: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectUnwrapped", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#expectUnwrapped[R](wrappedAt:Option[String],request:F[org.http4s.Request[F]])(implicitevidence$3:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "wrapped", "tail" : "(at: Option[String])(encoder: Encoder[R]): EntityEncoder[F, R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.wrapped", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#wrapped[R](at:Option[String])(implicitencoder:io.circe.Encoder[R]):org.http4s.EntityEncoder[F,R]", "kind" : "def"}, {"label" : "unwrapped", "tail" : "(at: Option[String])(decoder: Decoder[R]): EntityDecoder[F, R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.unwrapped", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#unwrapped[R](at:Option[String])(implicitdecoder:io.circe.Decoder[R]):org.http4s.EntityDecoder[F,R]", "kind" : "def"}, {"label" : "void", "tail" : ": EntityDecoder[F, Unit]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.void", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#void:org.http4s.EntityDecoder[F,Unit]", "kind" : "implicit val"}, {"label" : "jsonDecoder", "tail" : "(arg0: Decoder[A]): EntityDecoder[F, A]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.jsonDecoder", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#jsonDecoder[A](implicitevidence$2:io.circe.Decoder[A]):org.http4s.EntityDecoder[F,A]", "kind" : "implicit def"}, {"label" : "jsonEncoder", "tail" : "(arg0: Encoder[A]): EntityEncoder[F, A]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.jsonEncoder", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#jsonEncoder[A](implicitevidence$1:io.circe.Encoder[A]):org.http4s.EntityEncoder[F,A]", "kind" : "implicit def"}, {"label" : "jsonPrinter", "tail" : ": Printer", "member" : "pt.tecnico.dsi.openstack.common.services.Service.jsonPrinter", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#jsonPrinter:io.circe.Printer", "kind" : "val"}, {"label" : "dsl", "tail" : ": Http4sClientDsl[F]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.dsl", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#dsl:org.http4s.client.dsl.Http4sClientDsl[F]", "kind" : "val"}, {"label" : "F", "tail" : ": Sync[F]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.F", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#F:cats.effect.Sync[F]", "kind" : "implicit val"}, {"label" : "client", "tail" : ": Client[F]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.client", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#client:org.http4s.client.Client[F]", "kind" : "implicit val"}, {"label" : "authToken", "tail" : ": Header", "member" : "pt.tecnico.dsi.openstack.common.services.Service.authToken", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#authToken:org.http4s.Header", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "pt\/tecnico\/dsi\/neutron\/services\/Quotas.html", "kind" : "class"}, {"name" : "pt.tecnico.dsi.neutron.services.RouterInterfaces", "shortDescription" : "", "members_class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (RouterInterfaces[F]) => Boolean, msg: => Any): RouterInterfaces[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (RouterInterfaces[F]) => Boolean): RouterInterfaces[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): RouterInterfaces[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): RouterInterfaces[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (RouterInterfaces[F], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (RouterInterfaces[F], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "remove", "tail" : "(value: Remove): F[RouterInterface]", "member" : "pt.tecnico.dsi.neutron.services.RouterInterfaces.remove", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#remove(value:pt.tecnico.dsi.neutron.models.RouterInterface.Remove):F[pt.tecnico.dsi.neutron.models.RouterInterface]", "kind" : "def"}, {"label" : "addByPort", "tail" : "(portId: String): F[RouterInterface]", "member" : "pt.tecnico.dsi.neutron.services.RouterInterfaces.addByPort", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#addByPort(portId:String):F[pt.tecnico.dsi.neutron.models.RouterInterface]", "kind" : "def"}, {"label" : "addBySubnet", "tail" : "(subnetId: String): F[RouterInterface]", "member" : "pt.tecnico.dsi.neutron.services.RouterInterfaces.addBySubnet", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#addBySubnet(subnetId:String):F[pt.tecnico.dsi.neutron.models.RouterInterface]", "kind" : "def"}, {"member" : "pt.tecnico.dsi.neutron.services.RouterInterfaces#<init>", "error" : "unsupported entity"}, {"label" : "delete", "tail" : "(uri: Uri, extraHeaders: Header*): F[Unit]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.delete", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#delete(uri:org.http4s.Uri,extraHeaders:org.http4s.Header*):F[Unit]", "kind" : "def"}, {"label" : "list", "tail" : "(wrappedAt: String, uri: Uri, query: Query, extraHeaders: Header*)(arg0: Decoder[R]): Stream[F, R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.list", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#list[R](wrappedAt:String,uri:org.http4s.Uri,query:org.http4s.Query,extraHeaders:org.http4s.Header*)(implicitevidence$21:io.circe.Decoder[R]):fs2.Stream[F,R]", "kind" : "def"}, {"label" : "postHandleConflict", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(onConflict: F[R])(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.postHandleConflict", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#postHandleConflict[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(onConflict:F[R])(implicitevidence$19:io.circe.Encoder[V],implicitevidence$20:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "post", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.post", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#post[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$17:io.circe.Encoder[V],implicitevidence$18:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "patch", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.patch", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#patch[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$15:io.circe.Encoder[V],implicitevidence$16:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "put", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.put", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#put[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$13:io.circe.Encoder[V],implicitevidence$14:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "getOption", "tail" : "(wrappedAt: Option[String], uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.getOption", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#getOption[R](wrappedAt:Option[String],uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$12:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "get", "tail" : "(wrappedAt: Option[String], uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.get", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#get[R](wrappedAt:Option[String],uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$11:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "expectOption", "tail" : "(wrappedAt: Option[String], method: Method with PermitsBody, uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectOption", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#expectOption[R](wrappedAt:Option[String],method:org.http4s.Methodwithorg.http4s.Method.PermitsBody,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$10:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "expect", "tail" : "(wrappedAt: Option[String], method: Method with PermitsBody, uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expect", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#expect[R](wrappedAt:Option[String],method:org.http4s.Methodwithorg.http4s.Method.PermitsBody,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$9:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "expectOption", "tail" : "(wrappedAt: Option[String], method: Method with PermitsBody, value: B, uri: Uri, extraHeaders: Header*)(arg0: Encoder[B], arg1: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectOption", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#expectOption[B,R](wrappedAt:Option[String],method:org.http4s.Methodwithorg.http4s.Method.PermitsBody,value:B,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$7:io.circe.Encoder[B],implicitevidence$8:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "expect", "tail" : "(wrappedAt: Option[String], method: Method with PermitsBody, value: B, uri: Uri, extraHeaders: Header*)(arg0: Encoder[B], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expect", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#expect[B,R](wrappedAt:Option[String],method:org.http4s.Methodwithorg.http4s.Method.PermitsBody,value:B,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$5:io.circe.Encoder[B],implicitevidence$6:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "expectOptionUnwrapped", "tail" : "(wrappedAt: Option[String], request: F[Request[F]])(arg0: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectOptionUnwrapped", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#expectOptionUnwrapped[R](wrappedAt:Option[String],request:F[org.http4s.Request[F]])(implicitevidence$4:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "expectUnwrapped", "tail" : "(wrappedAt: Option[String], request: F[Request[F]])(arg0: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectUnwrapped", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#expectUnwrapped[R](wrappedAt:Option[String],request:F[org.http4s.Request[F]])(implicitevidence$3:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "wrapped", "tail" : "(at: Option[String])(encoder: Encoder[R]): EntityEncoder[F, R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.wrapped", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#wrapped[R](at:Option[String])(implicitencoder:io.circe.Encoder[R]):org.http4s.EntityEncoder[F,R]", "kind" : "def"}, {"label" : "unwrapped", "tail" : "(at: Option[String])(decoder: Decoder[R]): EntityDecoder[F, R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.unwrapped", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#unwrapped[R](at:Option[String])(implicitdecoder:io.circe.Decoder[R]):org.http4s.EntityDecoder[F,R]", "kind" : "def"}, {"label" : "void", "tail" : ": EntityDecoder[F, Unit]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.void", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#void:org.http4s.EntityDecoder[F,Unit]", "kind" : "implicit val"}, {"label" : "jsonDecoder", "tail" : "(arg0: Decoder[A]): EntityDecoder[F, A]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.jsonDecoder", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#jsonDecoder[A](implicitevidence$2:io.circe.Decoder[A]):org.http4s.EntityDecoder[F,A]", "kind" : "implicit def"}, {"label" : "jsonEncoder", "tail" : "(arg0: Encoder[A]): EntityEncoder[F, A]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.jsonEncoder", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#jsonEncoder[A](implicitevidence$1:io.circe.Encoder[A]):org.http4s.EntityEncoder[F,A]", "kind" : "implicit def"}, {"label" : "jsonPrinter", "tail" : ": Printer", "member" : "pt.tecnico.dsi.openstack.common.services.Service.jsonPrinter", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#jsonPrinter:io.circe.Printer", "kind" : "val"}, {"label" : "dsl", "tail" : ": Http4sClientDsl[F]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.dsl", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#dsl:org.http4s.client.dsl.Http4sClientDsl[F]", "kind" : "val"}, {"label" : "F", "tail" : ": Sync[F]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.F", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#F:cats.effect.Sync[F]", "kind" : "implicit val"}, {"label" : "client", "tail" : ": Client[F]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.client", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#client:org.http4s.client.Client[F]", "kind" : "implicit val"}, {"label" : "authToken", "tail" : ": Header", "member" : "pt.tecnico.dsi.openstack.common.services.Service.authToken", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#authToken:org.http4s.Header", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "pt\/tecnico\/dsi\/neutron\/services\/RouterInterfaces.html", "kind" : "class"}, {"name" : "pt.tecnico.dsi.neutron.services.Routers", "shortDescription" : "", "members_class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Routers[F]) => Boolean, msg: => Any): Routers[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Routers[F]) => Boolean): Routers[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Routers[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Routers[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Routers[F], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Routers[F], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "extraRoutes", "tail" : "(routerId: String): Routes[F]", "member" : "pt.tecnico.dsi.neutron.services.Routers.extraRoutes", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#extraRoutes(routerId:String):pt.tecnico.dsi.neutron.services.Routes[F]", "kind" : "def"}, {"label" : "interface", "tail" : "(routerId: String): RouterInterfaces[F]", "member" : "pt.tecnico.dsi.neutron.services.Routers.interface", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#interface(routerId:String):pt.tecnico.dsi.neutron.services.RouterInterfaces[F]", "kind" : "def"}, {"member" : "pt.tecnico.dsi.neutron.services.Routers#<init>", "error" : "unsupported entity"}, {"label" : "update", "tail" : "(id: String, value: Update, extraHeaders: Header*): F[Model]", "member" : "pt.tecnico.dsi.neutron.services.CrudService.update", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#update(id:String,value:CrudService.this.Update,extraHeaders:org.http4s.Header*):F[CrudService.this.Model]", "kind" : "def"}, {"label" : "Model", "tail" : "", "member" : "pt.tecnico.dsi.neutron.services.CrudService.Model", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#Model=T#Read", "kind" : "type"}, {"label" : "Update", "tail" : "", "member" : "pt.tecnico.dsi.neutron.services.CrudService.Update", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#Update=T#Update", "kind" : "type"}, {"label" : "Create", "tail" : "", "member" : "pt.tecnico.dsi.neutron.services.CrudService.Create", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#Create=T#Create", "kind" : "type"}, {"label" : "delete", "tail" : "(id: String, extraHeaders: Header*): F[Unit]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.delete", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#delete(id:String,extraHeaders:org.http4s.Header*):F[Unit]", "kind" : "def"}, {"label" : "delete", "tail" : "(value: Read, extraHeaders: Header*): F[Unit]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.delete", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#delete(value:Model,extraHeaders:org.http4s.Header*):F[Unit]", "kind" : "def"}, {"label" : "apply", "tail" : "(id: String, extraHeaders: Header*): F[Read]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.apply", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#apply(id:String,extraHeaders:org.http4s.Header*):F[Model]", "kind" : "def"}, {"label" : "get", "tail" : "(id: String, extraHeaders: Header*): F[Option[Read]]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.get", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#get(id:String,extraHeaders:org.http4s.Header*):F[Option[Model]]", "kind" : "def"}, {"label" : "createHandleConflict", "tail" : "(value: models.Router.Create, extraHeaders: Header*)(onConflict: F[Read]): F[Read]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.createHandleConflict", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#createHandleConflict(value:Create,extraHeaders:org.http4s.Header*)(onConflict:F[Model]):F[Model]", "kind" : "def"}, {"label" : "create", "tail" : "(value: models.Router.Create, extraHeaders: Header*): F[Read]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.create", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#create(value:Create,extraHeaders:org.http4s.Header*):F[Model]", "kind" : "def"}, {"label" : "list", "tail" : "(query: Query, extraHeaders: Header*): Stream[F, Read]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.list", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#list(query:org.http4s.Query,extraHeaders:org.http4s.Header*):fs2.Stream[F,Model]", "kind" : "def"}, {"label" : "list", "tail" : "(extraHeaders: Header*): Stream[F, Read]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.list", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#list(extraHeaders:org.http4s.Header*):fs2.Stream[F,Model]", "kind" : "def"}, {"label" : "wrappedAt", "tail" : ": Option[String]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.wrappedAt", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#wrappedAt:Option[String]", "kind" : "val"}, {"label" : "uri", "tail" : ": Uri", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.uri", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#uri:org.http4s.Uri", "kind" : "val"}, {"label" : "pluralName", "tail" : ": String", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.pluralName", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#pluralName:String", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.name", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#name:String", "kind" : "val"}, {"label" : "delete", "tail" : "(uri: Uri, extraHeaders: Header*): F[Unit]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.delete", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#delete(uri:org.http4s.Uri,extraHeaders:org.http4s.Header*):F[Unit]", "kind" : "def"}, {"label" : "list", "tail" : "(wrappedAt: String, uri: Uri, query: Query, extraHeaders: Header*)(arg0: Decoder[R]): Stream[F, R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.list", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#list[R](wrappedAt:String,uri:org.http4s.Uri,query:org.http4s.Query,extraHeaders:org.http4s.Header*)(implicitevidence$21:io.circe.Decoder[R]):fs2.Stream[F,R]", "kind" : "def"}, {"label" : "postHandleConflict", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(onConflict: F[R])(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.postHandleConflict", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#postHandleConflict[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(onConflict:F[R])(implicitevidence$19:io.circe.Encoder[V],implicitevidence$20:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "post", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.post", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#post[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$17:io.circe.Encoder[V],implicitevidence$18:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "patch", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.patch", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#patch[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$15:io.circe.Encoder[V],implicitevidence$16:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "put", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.put", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#put[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$13:io.circe.Encoder[V],implicitevidence$14:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "getOption", "tail" : "(wrappedAt: Option[String], uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.getOption", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#getOption[R](wrappedAt:Option[String],uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$12:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "get", "tail" : "(wrappedAt: Option[String], uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.get", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#get[R](wrappedAt:Option[String],uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$11:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "expectOption", "tail" : "(wrappedAt: Option[String], method: Method with PermitsBody, uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectOption", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#expectOption[R](wrappedAt:Option[String],method:org.http4s.Methodwithorg.http4s.Method.PermitsBody,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$10:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "expect", "tail" : "(wrappedAt: Option[String], method: Method with PermitsBody, uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expect", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#expect[R](wrappedAt:Option[String],method:org.http4s.Methodwithorg.http4s.Method.PermitsBody,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$9:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "expectOption", "tail" : "(wrappedAt: Option[String], method: Method with PermitsBody, value: B, uri: Uri, extraHeaders: Header*)(arg0: Encoder[B], arg1: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectOption", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#expectOption[B,R](wrappedAt:Option[String],method:org.http4s.Methodwithorg.http4s.Method.PermitsBody,value:B,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$7:io.circe.Encoder[B],implicitevidence$8:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "expect", "tail" : "(wrappedAt: Option[String], method: Method with PermitsBody, value: B, uri: Uri, extraHeaders: Header*)(arg0: Encoder[B], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expect", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#expect[B,R](wrappedAt:Option[String],method:org.http4s.Methodwithorg.http4s.Method.PermitsBody,value:B,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$5:io.circe.Encoder[B],implicitevidence$6:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "expectOptionUnwrapped", "tail" : "(wrappedAt: Option[String], request: F[Request[F]])(arg0: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectOptionUnwrapped", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#expectOptionUnwrapped[R](wrappedAt:Option[String],request:F[org.http4s.Request[F]])(implicitevidence$4:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "expectUnwrapped", "tail" : "(wrappedAt: Option[String], request: F[Request[F]])(arg0: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectUnwrapped", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#expectUnwrapped[R](wrappedAt:Option[String],request:F[org.http4s.Request[F]])(implicitevidence$3:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "wrapped", "tail" : "(at: Option[String])(encoder: Encoder[R]): EntityEncoder[F, R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.wrapped", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#wrapped[R](at:Option[String])(implicitencoder:io.circe.Encoder[R]):org.http4s.EntityEncoder[F,R]", "kind" : "def"}, {"label" : "unwrapped", "tail" : "(at: Option[String])(decoder: Decoder[R]): EntityDecoder[F, R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.unwrapped", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#unwrapped[R](at:Option[String])(implicitdecoder:io.circe.Decoder[R]):org.http4s.EntityDecoder[F,R]", "kind" : "def"}, {"label" : "void", "tail" : ": EntityDecoder[F, Unit]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.void", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#void:org.http4s.EntityDecoder[F,Unit]", "kind" : "implicit val"}, {"label" : "jsonDecoder", "tail" : "(arg0: Decoder[A]): EntityDecoder[F, A]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.jsonDecoder", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#jsonDecoder[A](implicitevidence$2:io.circe.Decoder[A]):org.http4s.EntityDecoder[F,A]", "kind" : "implicit def"}, {"label" : "jsonEncoder", "tail" : "(arg0: Encoder[A]): EntityEncoder[F, A]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.jsonEncoder", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#jsonEncoder[A](implicitevidence$1:io.circe.Encoder[A]):org.http4s.EntityEncoder[F,A]", "kind" : "implicit def"}, {"label" : "jsonPrinter", "tail" : ": Printer", "member" : "pt.tecnico.dsi.openstack.common.services.Service.jsonPrinter", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#jsonPrinter:io.circe.Printer", "kind" : "val"}, {"label" : "dsl", "tail" : ": Http4sClientDsl[F]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.dsl", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#dsl:org.http4s.client.dsl.Http4sClientDsl[F]", "kind" : "val"}, {"label" : "F", "tail" : ": Sync[F]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.F", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#F:cats.effect.Sync[F]", "kind" : "implicit val"}, {"label" : "client", "tail" : ": Client[F]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.client", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#client:org.http4s.client.Client[F]", "kind" : "implicit val"}, {"label" : "authToken", "tail" : ": Header", "member" : "pt.tecnico.dsi.openstack.common.services.Service.authToken", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#authToken:org.http4s.Header", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "pt\/tecnico\/dsi\/neutron\/services\/Routers.html", "kind" : "class"}, {"name" : "pt.tecnico.dsi.neutron.services.Routes", "shortDescription" : "", "members_class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Routes[F]) => Boolean, msg: => Any): Routes[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Routes[F]) => Boolean): Routes[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Routes[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Routes[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Routes[F], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Routes[F], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "remove", "tail" : "(routes: List[Route]): F[List[Route]]", "member" : "pt.tecnico.dsi.neutron.services.Routes.remove", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#remove(routes:List[pt.tecnico.dsi.neutron.models.Route]):F[List[pt.tecnico.dsi.neutron.models.Route]]", "kind" : "def"}, {"label" : "add", "tail" : "(routes: List[Route]): F[List[Route]]", "member" : "pt.tecnico.dsi.neutron.services.Routes.add", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#add(routes:List[pt.tecnico.dsi.neutron.models.Route]):F[List[pt.tecnico.dsi.neutron.models.Route]]", "kind" : "def"}, {"label" : "e", "tail" : ": Encoder[List[Route]]", "member" : "pt.tecnico.dsi.neutron.services.Routes.e", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#e:io.circe.Encoder[List[pt.tecnico.dsi.neutron.models.Route]]", "kind" : "implicit val"}, {"label" : "d", "tail" : ": Decoder[List[Route]]", "member" : "pt.tecnico.dsi.neutron.services.Routes.d", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#d:io.circe.Decoder[List[pt.tecnico.dsi.neutron.models.Route]]", "kind" : "implicit val"}, {"member" : "pt.tecnico.dsi.neutron.services.Routes#<init>", "error" : "unsupported entity"}, {"label" : "delete", "tail" : "(uri: Uri, extraHeaders: Header*): F[Unit]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.delete", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#delete(uri:org.http4s.Uri,extraHeaders:org.http4s.Header*):F[Unit]", "kind" : "def"}, {"label" : "list", "tail" : "(wrappedAt: String, uri: Uri, query: Query, extraHeaders: Header*)(arg0: Decoder[R]): Stream[F, R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.list", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#list[R](wrappedAt:String,uri:org.http4s.Uri,query:org.http4s.Query,extraHeaders:org.http4s.Header*)(implicitevidence$21:io.circe.Decoder[R]):fs2.Stream[F,R]", "kind" : "def"}, {"label" : "postHandleConflict", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(onConflict: F[R])(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.postHandleConflict", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#postHandleConflict[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(onConflict:F[R])(implicitevidence$19:io.circe.Encoder[V],implicitevidence$20:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "post", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.post", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#post[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$17:io.circe.Encoder[V],implicitevidence$18:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "patch", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.patch", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#patch[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$15:io.circe.Encoder[V],implicitevidence$16:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "put", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.put", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#put[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$13:io.circe.Encoder[V],implicitevidence$14:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "getOption", "tail" : "(wrappedAt: Option[String], uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.getOption", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#getOption[R](wrappedAt:Option[String],uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$12:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "get", "tail" : "(wrappedAt: Option[String], uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.get", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#get[R](wrappedAt:Option[String],uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$11:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "expectOption", "tail" : "(wrappedAt: Option[String], method: Method with PermitsBody, uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectOption", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#expectOption[R](wrappedAt:Option[String],method:org.http4s.Methodwithorg.http4s.Method.PermitsBody,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$10:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "expect", "tail" : "(wrappedAt: Option[String], method: Method with PermitsBody, uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expect", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#expect[R](wrappedAt:Option[String],method:org.http4s.Methodwithorg.http4s.Method.PermitsBody,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$9:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "expectOption", "tail" : "(wrappedAt: Option[String], method: Method with PermitsBody, value: B, uri: Uri, extraHeaders: Header*)(arg0: Encoder[B], arg1: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectOption", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#expectOption[B,R](wrappedAt:Option[String],method:org.http4s.Methodwithorg.http4s.Method.PermitsBody,value:B,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$7:io.circe.Encoder[B],implicitevidence$8:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "expect", "tail" : "(wrappedAt: Option[String], method: Method with PermitsBody, value: B, uri: Uri, extraHeaders: Header*)(arg0: Encoder[B], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expect", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#expect[B,R](wrappedAt:Option[String],method:org.http4s.Methodwithorg.http4s.Method.PermitsBody,value:B,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$5:io.circe.Encoder[B],implicitevidence$6:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "expectOptionUnwrapped", "tail" : "(wrappedAt: Option[String], request: F[Request[F]])(arg0: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectOptionUnwrapped", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#expectOptionUnwrapped[R](wrappedAt:Option[String],request:F[org.http4s.Request[F]])(implicitevidence$4:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "expectUnwrapped", "tail" : "(wrappedAt: Option[String], request: F[Request[F]])(arg0: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectUnwrapped", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#expectUnwrapped[R](wrappedAt:Option[String],request:F[org.http4s.Request[F]])(implicitevidence$3:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "wrapped", "tail" : "(at: Option[String])(encoder: Encoder[R]): EntityEncoder[F, R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.wrapped", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#wrapped[R](at:Option[String])(implicitencoder:io.circe.Encoder[R]):org.http4s.EntityEncoder[F,R]", "kind" : "def"}, {"label" : "unwrapped", "tail" : "(at: Option[String])(decoder: Decoder[R]): EntityDecoder[F, R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.unwrapped", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#unwrapped[R](at:Option[String])(implicitdecoder:io.circe.Decoder[R]):org.http4s.EntityDecoder[F,R]", "kind" : "def"}, {"label" : "void", "tail" : ": EntityDecoder[F, Unit]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.void", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#void:org.http4s.EntityDecoder[F,Unit]", "kind" : "implicit val"}, {"label" : "jsonDecoder", "tail" : "(arg0: Decoder[A]): EntityDecoder[F, A]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.jsonDecoder", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#jsonDecoder[A](implicitevidence$2:io.circe.Decoder[A]):org.http4s.EntityDecoder[F,A]", "kind" : "implicit def"}, {"label" : "jsonEncoder", "tail" : "(arg0: Encoder[A]): EntityEncoder[F, A]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.jsonEncoder", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#jsonEncoder[A](implicitevidence$1:io.circe.Encoder[A]):org.http4s.EntityEncoder[F,A]", "kind" : "implicit def"}, {"label" : "jsonPrinter", "tail" : ": Printer", "member" : "pt.tecnico.dsi.openstack.common.services.Service.jsonPrinter", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#jsonPrinter:io.circe.Printer", "kind" : "val"}, {"label" : "dsl", "tail" : ": Http4sClientDsl[F]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.dsl", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#dsl:org.http4s.client.dsl.Http4sClientDsl[F]", "kind" : "val"}, {"label" : "F", "tail" : ": Sync[F]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.F", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#F:cats.effect.Sync[F]", "kind" : "implicit val"}, {"label" : "client", "tail" : ": Client[F]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.client", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#client:org.http4s.client.Client[F]", "kind" : "implicit val"}, {"label" : "authToken", "tail" : ": Header", "member" : "pt.tecnico.dsi.openstack.common.services.Service.authToken", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#authToken:org.http4s.Header", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "pt\/tecnico\/dsi\/neutron\/services\/Routes.html", "kind" : "class"}, {"name" : "pt.tecnico.dsi.neutron.services.SecurityGroupRules", "shortDescription" : "", "members_class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SecurityGroupRules[F]) => Boolean, msg: => Any): SecurityGroupRules[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SecurityGroupRules[F]) => Boolean): SecurityGroupRules[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): SecurityGroupRules[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): SecurityGroupRules[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (SecurityGroupRules[F], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (SecurityGroupRules[F], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "delete", "tail" : "(id: String): F[Unit]", "member" : "pt.tecnico.dsi.neutron.services.SecurityGroupRules.delete", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#delete(id:String):F[Unit]", "kind" : "def"}, {"label" : "delete", "tail" : "(value: SecurityGroupRule): F[Unit]", "member" : "pt.tecnico.dsi.neutron.services.SecurityGroupRules.delete", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#delete(value:pt.tecnico.dsi.neutron.models.SecurityGroupRule):F[Unit]", "kind" : "def"}, {"label" : "get", "tail" : "(id: String): F[Option[SecurityGroupRule]]", "member" : "pt.tecnico.dsi.neutron.services.SecurityGroupRules.get", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#get(id:String):F[Option[pt.tecnico.dsi.neutron.models.SecurityGroupRule]]", "kind" : "def"}, {"label" : "apply", "tail" : "(id: String): F[Option[SecurityGroupRule]]", "member" : "pt.tecnico.dsi.neutron.services.SecurityGroupRules.apply", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#apply(id:String):F[Option[pt.tecnico.dsi.neutron.models.SecurityGroupRule]]", "kind" : "def"}, {"label" : "create", "tail" : "(value: Create): F[SecurityGroupRule]", "member" : "pt.tecnico.dsi.neutron.services.SecurityGroupRules.create", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#create(value:pt.tecnico.dsi.neutron.models.SecurityGroupRule.Create):F[pt.tecnico.dsi.neutron.models.SecurityGroupRule]", "kind" : "def"}, {"label" : "list", "tail" : "(query: Query): Stream[F, SecurityGroupRule]", "member" : "pt.tecnico.dsi.neutron.services.SecurityGroupRules.list", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#list(query:org.http4s.Query):fs2.Stream[F,pt.tecnico.dsi.neutron.models.SecurityGroupRule]", "kind" : "def"}, {"label" : "list", "tail" : "(): Stream[F, SecurityGroupRule]", "member" : "pt.tecnico.dsi.neutron.services.SecurityGroupRules.list", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#list():fs2.Stream[F,pt.tecnico.dsi.neutron.models.SecurityGroupRule]", "kind" : "def"}, {"label" : "uri", "tail" : ": Uri", "member" : "pt.tecnico.dsi.neutron.services.SecurityGroupRules.uri", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#uri:org.http4s.Uri", "kind" : "val"}, {"label" : "pluralName", "tail" : ": String", "member" : "pt.tecnico.dsi.neutron.services.SecurityGroupRules.pluralName", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#pluralName:String", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "pt.tecnico.dsi.neutron.services.SecurityGroupRules.name", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#name:String", "kind" : "val"}, {"member" : "pt.tecnico.dsi.neutron.services.SecurityGroupRules#<init>", "error" : "unsupported entity"}, {"label" : "delete", "tail" : "(uri: Uri, extraHeaders: Header*): F[Unit]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.delete", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#delete(uri:org.http4s.Uri,extraHeaders:org.http4s.Header*):F[Unit]", "kind" : "def"}, {"label" : "list", "tail" : "(wrappedAt: String, uri: Uri, query: Query, extraHeaders: Header*)(arg0: Decoder[R]): Stream[F, R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.list", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#list[R](wrappedAt:String,uri:org.http4s.Uri,query:org.http4s.Query,extraHeaders:org.http4s.Header*)(implicitevidence$21:io.circe.Decoder[R]):fs2.Stream[F,R]", "kind" : "def"}, {"label" : "postHandleConflict", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(onConflict: F[R])(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.postHandleConflict", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#postHandleConflict[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(onConflict:F[R])(implicitevidence$19:io.circe.Encoder[V],implicitevidence$20:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "post", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.post", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#post[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$17:io.circe.Encoder[V],implicitevidence$18:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "patch", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.patch", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#patch[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$15:io.circe.Encoder[V],implicitevidence$16:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "put", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.put", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#put[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$13:io.circe.Encoder[V],implicitevidence$14:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "getOption", "tail" : "(wrappedAt: Option[String], uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.getOption", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#getOption[R](wrappedAt:Option[String],uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$12:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "get", "tail" : "(wrappedAt: Option[String], uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.get", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#get[R](wrappedAt:Option[String],uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$11:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "expectOption", "tail" : "(wrappedAt: Option[String], method: Method with PermitsBody, uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectOption", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#expectOption[R](wrappedAt:Option[String],method:org.http4s.Methodwithorg.http4s.Method.PermitsBody,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$10:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "expect", "tail" : "(wrappedAt: Option[String], method: Method with PermitsBody, uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expect", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#expect[R](wrappedAt:Option[String],method:org.http4s.Methodwithorg.http4s.Method.PermitsBody,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$9:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "expectOption", "tail" : "(wrappedAt: Option[String], method: Method with PermitsBody, value: B, uri: Uri, extraHeaders: Header*)(arg0: Encoder[B], arg1: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectOption", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#expectOption[B,R](wrappedAt:Option[String],method:org.http4s.Methodwithorg.http4s.Method.PermitsBody,value:B,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$7:io.circe.Encoder[B],implicitevidence$8:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "expect", "tail" : "(wrappedAt: Option[String], method: Method with PermitsBody, value: B, uri: Uri, extraHeaders: Header*)(arg0: Encoder[B], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expect", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#expect[B,R](wrappedAt:Option[String],method:org.http4s.Methodwithorg.http4s.Method.PermitsBody,value:B,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$5:io.circe.Encoder[B],implicitevidence$6:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "expectOptionUnwrapped", "tail" : "(wrappedAt: Option[String], request: F[Request[F]])(arg0: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectOptionUnwrapped", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#expectOptionUnwrapped[R](wrappedAt:Option[String],request:F[org.http4s.Request[F]])(implicitevidence$4:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "expectUnwrapped", "tail" : "(wrappedAt: Option[String], request: F[Request[F]])(arg0: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectUnwrapped", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#expectUnwrapped[R](wrappedAt:Option[String],request:F[org.http4s.Request[F]])(implicitevidence$3:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "wrapped", "tail" : "(at: Option[String])(encoder: Encoder[R]): EntityEncoder[F, R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.wrapped", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#wrapped[R](at:Option[String])(implicitencoder:io.circe.Encoder[R]):org.http4s.EntityEncoder[F,R]", "kind" : "def"}, {"label" : "unwrapped", "tail" : "(at: Option[String])(decoder: Decoder[R]): EntityDecoder[F, R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.unwrapped", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#unwrapped[R](at:Option[String])(implicitdecoder:io.circe.Decoder[R]):org.http4s.EntityDecoder[F,R]", "kind" : "def"}, {"label" : "void", "tail" : ": EntityDecoder[F, Unit]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.void", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#void:org.http4s.EntityDecoder[F,Unit]", "kind" : "implicit val"}, {"label" : "jsonDecoder", "tail" : "(arg0: Decoder[A]): EntityDecoder[F, A]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.jsonDecoder", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#jsonDecoder[A](implicitevidence$2:io.circe.Decoder[A]):org.http4s.EntityDecoder[F,A]", "kind" : "implicit def"}, {"label" : "jsonEncoder", "tail" : "(arg0: Encoder[A]): EntityEncoder[F, A]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.jsonEncoder", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#jsonEncoder[A](implicitevidence$1:io.circe.Encoder[A]):org.http4s.EntityEncoder[F,A]", "kind" : "implicit def"}, {"label" : "jsonPrinter", "tail" : ": Printer", "member" : "pt.tecnico.dsi.openstack.common.services.Service.jsonPrinter", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#jsonPrinter:io.circe.Printer", "kind" : "val"}, {"label" : "dsl", "tail" : ": Http4sClientDsl[F]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.dsl", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#dsl:org.http4s.client.dsl.Http4sClientDsl[F]", "kind" : "val"}, {"label" : "F", "tail" : ": Sync[F]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.F", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#F:cats.effect.Sync[F]", "kind" : "implicit val"}, {"label" : "client", "tail" : ": Client[F]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.client", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#client:org.http4s.client.Client[F]", "kind" : "implicit val"}, {"label" : "authToken", "tail" : ": Header", "member" : "pt.tecnico.dsi.openstack.common.services.Service.authToken", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#authToken:org.http4s.Header", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroupRules.html", "kind" : "class"}, {"name" : "pt.tecnico.dsi.neutron.services.SecurityGroups", "shortDescription" : "", "members_class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SecurityGroups[F]) => Boolean, msg: => Any): SecurityGroups[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SecurityGroups[F]) => Boolean): SecurityGroups[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): SecurityGroups[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): SecurityGroups[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (SecurityGroups[F], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (SecurityGroups[F], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "pt.tecnico.dsi.neutron.services.SecurityGroups#<init>", "error" : "unsupported entity"}, {"label" : "update", "tail" : "(id: String, value: Update, extraHeaders: Header*): F[Model]", "member" : "pt.tecnico.dsi.neutron.services.CrudService.update", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#update(id:String,value:CrudService.this.Update,extraHeaders:org.http4s.Header*):F[CrudService.this.Model]", "kind" : "def"}, {"label" : "Model", "tail" : "", "member" : "pt.tecnico.dsi.neutron.services.CrudService.Model", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#Model=T#Read", "kind" : "type"}, {"label" : "Update", "tail" : "", "member" : "pt.tecnico.dsi.neutron.services.CrudService.Update", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#Update=T#Update", "kind" : "type"}, {"label" : "Create", "tail" : "", "member" : "pt.tecnico.dsi.neutron.services.CrudService.Create", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#Create=T#Create", "kind" : "type"}, {"label" : "delete", "tail" : "(id: String, extraHeaders: Header*): F[Unit]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.delete", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#delete(id:String,extraHeaders:org.http4s.Header*):F[Unit]", "kind" : "def"}, {"label" : "delete", "tail" : "(value: Read, extraHeaders: Header*): F[Unit]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.delete", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#delete(value:Model,extraHeaders:org.http4s.Header*):F[Unit]", "kind" : "def"}, {"label" : "apply", "tail" : "(id: String, extraHeaders: Header*): F[Read]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.apply", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#apply(id:String,extraHeaders:org.http4s.Header*):F[Model]", "kind" : "def"}, {"label" : "get", "tail" : "(id: String, extraHeaders: Header*): F[Option[Read]]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.get", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#get(id:String,extraHeaders:org.http4s.Header*):F[Option[Model]]", "kind" : "def"}, {"label" : "createHandleConflict", "tail" : "(value: models.SecurityGroup.Create, extraHeaders: Header*)(onConflict: F[Read]): F[Read]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.createHandleConflict", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#createHandleConflict(value:Create,extraHeaders:org.http4s.Header*)(onConflict:F[Model]):F[Model]", "kind" : "def"}, {"label" : "create", "tail" : "(value: models.SecurityGroup.Create, extraHeaders: Header*): F[Read]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.create", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#create(value:Create,extraHeaders:org.http4s.Header*):F[Model]", "kind" : "def"}, {"label" : "list", "tail" : "(query: Query, extraHeaders: Header*): Stream[F, Read]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.list", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#list(query:org.http4s.Query,extraHeaders:org.http4s.Header*):fs2.Stream[F,Model]", "kind" : "def"}, {"label" : "list", "tail" : "(extraHeaders: Header*): Stream[F, Read]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.list", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#list(extraHeaders:org.http4s.Header*):fs2.Stream[F,Model]", "kind" : "def"}, {"label" : "wrappedAt", "tail" : ": Option[String]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.wrappedAt", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#wrappedAt:Option[String]", "kind" : "val"}, {"label" : "uri", "tail" : ": Uri", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.uri", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#uri:org.http4s.Uri", "kind" : "val"}, {"label" : "pluralName", "tail" : ": String", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.pluralName", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#pluralName:String", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.name", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#name:String", "kind" : "val"}, {"label" : "delete", "tail" : "(uri: Uri, extraHeaders: Header*): F[Unit]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.delete", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#delete(uri:org.http4s.Uri,extraHeaders:org.http4s.Header*):F[Unit]", "kind" : "def"}, {"label" : "list", "tail" : "(wrappedAt: String, uri: Uri, query: Query, extraHeaders: Header*)(arg0: Decoder[R]): Stream[F, R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.list", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#list[R](wrappedAt:String,uri:org.http4s.Uri,query:org.http4s.Query,extraHeaders:org.http4s.Header*)(implicitevidence$21:io.circe.Decoder[R]):fs2.Stream[F,R]", "kind" : "def"}, {"label" : "postHandleConflict", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(onConflict: F[R])(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.postHandleConflict", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#postHandleConflict[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(onConflict:F[R])(implicitevidence$19:io.circe.Encoder[V],implicitevidence$20:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "post", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.post", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#post[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$17:io.circe.Encoder[V],implicitevidence$18:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "patch", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.patch", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#patch[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$15:io.circe.Encoder[V],implicitevidence$16:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "put", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.put", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#put[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$13:io.circe.Encoder[V],implicitevidence$14:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "getOption", "tail" : "(wrappedAt: Option[String], uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.getOption", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#getOption[R](wrappedAt:Option[String],uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$12:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "get", "tail" : "(wrappedAt: Option[String], uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.get", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#get[R](wrappedAt:Option[String],uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$11:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "expectOption", "tail" : "(wrappedAt: Option[String], method: Method with PermitsBody, uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectOption", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#expectOption[R](wrappedAt:Option[String],method:org.http4s.Methodwithorg.http4s.Method.PermitsBody,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$10:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "expect", "tail" : "(wrappedAt: Option[String], method: Method with PermitsBody, uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expect", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#expect[R](wrappedAt:Option[String],method:org.http4s.Methodwithorg.http4s.Method.PermitsBody,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$9:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "expectOption", "tail" : "(wrappedAt: Option[String], method: Method with PermitsBody, value: B, uri: Uri, extraHeaders: Header*)(arg0: Encoder[B], arg1: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectOption", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#expectOption[B,R](wrappedAt:Option[String],method:org.http4s.Methodwithorg.http4s.Method.PermitsBody,value:B,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$7:io.circe.Encoder[B],implicitevidence$8:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "expect", "tail" : "(wrappedAt: Option[String], method: Method with PermitsBody, value: B, uri: Uri, extraHeaders: Header*)(arg0: Encoder[B], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expect", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#expect[B,R](wrappedAt:Option[String],method:org.http4s.Methodwithorg.http4s.Method.PermitsBody,value:B,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$5:io.circe.Encoder[B],implicitevidence$6:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "expectOptionUnwrapped", "tail" : "(wrappedAt: Option[String], request: F[Request[F]])(arg0: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectOptionUnwrapped", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#expectOptionUnwrapped[R](wrappedAt:Option[String],request:F[org.http4s.Request[F]])(implicitevidence$4:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "expectUnwrapped", "tail" : "(wrappedAt: Option[String], request: F[Request[F]])(arg0: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectUnwrapped", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#expectUnwrapped[R](wrappedAt:Option[String],request:F[org.http4s.Request[F]])(implicitevidence$3:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "wrapped", "tail" : "(at: Option[String])(encoder: Encoder[R]): EntityEncoder[F, R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.wrapped", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#wrapped[R](at:Option[String])(implicitencoder:io.circe.Encoder[R]):org.http4s.EntityEncoder[F,R]", "kind" : "def"}, {"label" : "unwrapped", "tail" : "(at: Option[String])(decoder: Decoder[R]): EntityDecoder[F, R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.unwrapped", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#unwrapped[R](at:Option[String])(implicitdecoder:io.circe.Decoder[R]):org.http4s.EntityDecoder[F,R]", "kind" : "def"}, {"label" : "void", "tail" : ": EntityDecoder[F, Unit]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.void", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#void:org.http4s.EntityDecoder[F,Unit]", "kind" : "implicit val"}, {"label" : "jsonDecoder", "tail" : "(arg0: Decoder[A]): EntityDecoder[F, A]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.jsonDecoder", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#jsonDecoder[A](implicitevidence$2:io.circe.Decoder[A]):org.http4s.EntityDecoder[F,A]", "kind" : "implicit def"}, {"label" : "jsonEncoder", "tail" : "(arg0: Encoder[A]): EntityEncoder[F, A]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.jsonEncoder", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#jsonEncoder[A](implicitevidence$1:io.circe.Encoder[A]):org.http4s.EntityEncoder[F,A]", "kind" : "implicit def"}, {"label" : "jsonPrinter", "tail" : ": Printer", "member" : "pt.tecnico.dsi.openstack.common.services.Service.jsonPrinter", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#jsonPrinter:io.circe.Printer", "kind" : "val"}, {"label" : "dsl", "tail" : ": Http4sClientDsl[F]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.dsl", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#dsl:org.http4s.client.dsl.Http4sClientDsl[F]", "kind" : "val"}, {"label" : "F", "tail" : ": Sync[F]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.F", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#F:cats.effect.Sync[F]", "kind" : "implicit val"}, {"label" : "client", "tail" : ": Client[F]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.client", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#client:org.http4s.client.Client[F]", "kind" : "implicit val"}, {"label" : "authToken", "tail" : ": Header", "member" : "pt.tecnico.dsi.openstack.common.services.Service.authToken", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#authToken:org.http4s.Header", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "pt\/tecnico\/dsi\/neutron\/services\/SecurityGroups.html", "kind" : "class"}, {"name" : "pt.tecnico.dsi.neutron.services.Subnets", "shortDescription" : "", "members_class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Subnets[F]) => Boolean, msg: => Any): Subnets[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Subnets[F]) => Boolean): Subnets[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Subnets[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Subnets[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Subnets[F], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Subnets[F], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "pt.tecnico.dsi.neutron.services.Subnets#<init>", "error" : "unsupported entity"}, {"label" : "create", "tail" : "(values: List[models.Subnet.Create])(encoder: Encoder[models.Subnet.Create], decoder: Decoder[Read]): F[List[Read]]", "member" : "pt.tecnico.dsi.neutron.services.BulkCreate.create", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#create(values:List[T#Create])(implicitencoder:io.circe.Encoder[T#Create],implicitdecoder:io.circe.Decoder[T#Read]):F[List[T#Read]]", "kind" : "def"}, {"label" : "update", "tail" : "(id: String, value: Update, extraHeaders: Header*): F[Model]", "member" : "pt.tecnico.dsi.neutron.services.CrudService.update", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#update(id:String,value:CrudService.this.Update,extraHeaders:org.http4s.Header*):F[CrudService.this.Model]", "kind" : "def"}, {"label" : "Model", "tail" : "", "member" : "pt.tecnico.dsi.neutron.services.CrudService.Model", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#Model=T#Read", "kind" : "type"}, {"label" : "Update", "tail" : "", "member" : "pt.tecnico.dsi.neutron.services.CrudService.Update", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#Update=T#Update", "kind" : "type"}, {"label" : "Create", "tail" : "", "member" : "pt.tecnico.dsi.neutron.services.CrudService.Create", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#Create=T#Create", "kind" : "type"}, {"label" : "delete", "tail" : "(id: String, extraHeaders: Header*): F[Unit]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.delete", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#delete(id:String,extraHeaders:org.http4s.Header*):F[Unit]", "kind" : "def"}, {"label" : "delete", "tail" : "(value: Read, extraHeaders: Header*): F[Unit]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.delete", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#delete(value:Model,extraHeaders:org.http4s.Header*):F[Unit]", "kind" : "def"}, {"label" : "apply", "tail" : "(id: String, extraHeaders: Header*): F[Read]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.apply", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#apply(id:String,extraHeaders:org.http4s.Header*):F[Model]", "kind" : "def"}, {"label" : "get", "tail" : "(id: String, extraHeaders: Header*): F[Option[Read]]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.get", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#get(id:String,extraHeaders:org.http4s.Header*):F[Option[Model]]", "kind" : "def"}, {"label" : "createHandleConflict", "tail" : "(value: models.Subnet.Create, extraHeaders: Header*)(onConflict: F[Read]): F[Read]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.createHandleConflict", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#createHandleConflict(value:Create,extraHeaders:org.http4s.Header*)(onConflict:F[Model]):F[Model]", "kind" : "def"}, {"label" : "create", "tail" : "(value: models.Subnet.Create, extraHeaders: Header*): F[Read]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.create", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#create(value:Create,extraHeaders:org.http4s.Header*):F[Model]", "kind" : "def"}, {"label" : "list", "tail" : "(query: Query, extraHeaders: Header*): Stream[F, Read]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.list", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#list(query:org.http4s.Query,extraHeaders:org.http4s.Header*):fs2.Stream[F,Model]", "kind" : "def"}, {"label" : "list", "tail" : "(extraHeaders: Header*): Stream[F, Read]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.list", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#list(extraHeaders:org.http4s.Header*):fs2.Stream[F,Model]", "kind" : "def"}, {"label" : "wrappedAt", "tail" : ": Option[String]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.wrappedAt", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#wrappedAt:Option[String]", "kind" : "val"}, {"label" : "uri", "tail" : ": Uri", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.uri", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#uri:org.http4s.Uri", "kind" : "val"}, {"label" : "pluralName", "tail" : ": String", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.pluralName", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#pluralName:String", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.name", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#name:String", "kind" : "val"}, {"label" : "delete", "tail" : "(uri: Uri, extraHeaders: Header*): F[Unit]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.delete", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#delete(uri:org.http4s.Uri,extraHeaders:org.http4s.Header*):F[Unit]", "kind" : "def"}, {"label" : "list", "tail" : "(wrappedAt: String, uri: Uri, query: Query, extraHeaders: Header*)(arg0: Decoder[R]): Stream[F, R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.list", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#list[R](wrappedAt:String,uri:org.http4s.Uri,query:org.http4s.Query,extraHeaders:org.http4s.Header*)(implicitevidence$21:io.circe.Decoder[R]):fs2.Stream[F,R]", "kind" : "def"}, {"label" : "postHandleConflict", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(onConflict: F[R])(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.postHandleConflict", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#postHandleConflict[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(onConflict:F[R])(implicitevidence$19:io.circe.Encoder[V],implicitevidence$20:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "post", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.post", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#post[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$17:io.circe.Encoder[V],implicitevidence$18:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "patch", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.patch", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#patch[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$15:io.circe.Encoder[V],implicitevidence$16:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "put", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.put", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#put[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$13:io.circe.Encoder[V],implicitevidence$14:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "getOption", "tail" : "(wrappedAt: Option[String], uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.getOption", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#getOption[R](wrappedAt:Option[String],uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$12:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "get", "tail" : "(wrappedAt: Option[String], uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.get", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#get[R](wrappedAt:Option[String],uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$11:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "expectOption", "tail" : "(wrappedAt: Option[String], method: Method with PermitsBody, uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectOption", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#expectOption[R](wrappedAt:Option[String],method:org.http4s.Methodwithorg.http4s.Method.PermitsBody,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$10:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "expect", "tail" : "(wrappedAt: Option[String], method: Method with PermitsBody, uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expect", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#expect[R](wrappedAt:Option[String],method:org.http4s.Methodwithorg.http4s.Method.PermitsBody,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$9:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "expectOption", "tail" : "(wrappedAt: Option[String], method: Method with PermitsBody, value: B, uri: Uri, extraHeaders: Header*)(arg0: Encoder[B], arg1: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectOption", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#expectOption[B,R](wrappedAt:Option[String],method:org.http4s.Methodwithorg.http4s.Method.PermitsBody,value:B,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$7:io.circe.Encoder[B],implicitevidence$8:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "expect", "tail" : "(wrappedAt: Option[String], method: Method with PermitsBody, value: B, uri: Uri, extraHeaders: Header*)(arg0: Encoder[B], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expect", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#expect[B,R](wrappedAt:Option[String],method:org.http4s.Methodwithorg.http4s.Method.PermitsBody,value:B,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$5:io.circe.Encoder[B],implicitevidence$6:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "expectOptionUnwrapped", "tail" : "(wrappedAt: Option[String], request: F[Request[F]])(arg0: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectOptionUnwrapped", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#expectOptionUnwrapped[R](wrappedAt:Option[String],request:F[org.http4s.Request[F]])(implicitevidence$4:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "expectUnwrapped", "tail" : "(wrappedAt: Option[String], request: F[Request[F]])(arg0: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectUnwrapped", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#expectUnwrapped[R](wrappedAt:Option[String],request:F[org.http4s.Request[F]])(implicitevidence$3:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "wrapped", "tail" : "(at: Option[String])(encoder: Encoder[R]): EntityEncoder[F, R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.wrapped", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#wrapped[R](at:Option[String])(implicitencoder:io.circe.Encoder[R]):org.http4s.EntityEncoder[F,R]", "kind" : "def"}, {"label" : "unwrapped", "tail" : "(at: Option[String])(decoder: Decoder[R]): EntityDecoder[F, R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.unwrapped", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#unwrapped[R](at:Option[String])(implicitdecoder:io.circe.Decoder[R]):org.http4s.EntityDecoder[F,R]", "kind" : "def"}, {"label" : "void", "tail" : ": EntityDecoder[F, Unit]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.void", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#void:org.http4s.EntityDecoder[F,Unit]", "kind" : "implicit val"}, {"label" : "jsonDecoder", "tail" : "(arg0: Decoder[A]): EntityDecoder[F, A]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.jsonDecoder", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#jsonDecoder[A](implicitevidence$2:io.circe.Decoder[A]):org.http4s.EntityDecoder[F,A]", "kind" : "implicit def"}, {"label" : "jsonEncoder", "tail" : "(arg0: Encoder[A]): EntityEncoder[F, A]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.jsonEncoder", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#jsonEncoder[A](implicitevidence$1:io.circe.Encoder[A]):org.http4s.EntityEncoder[F,A]", "kind" : "implicit def"}, {"label" : "jsonPrinter", "tail" : ": Printer", "member" : "pt.tecnico.dsi.openstack.common.services.Service.jsonPrinter", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#jsonPrinter:io.circe.Printer", "kind" : "val"}, {"label" : "dsl", "tail" : ": Http4sClientDsl[F]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.dsl", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#dsl:org.http4s.client.dsl.Http4sClientDsl[F]", "kind" : "val"}, {"label" : "F", "tail" : ": Sync[F]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.F", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#F:cats.effect.Sync[F]", "kind" : "implicit val"}, {"label" : "client", "tail" : ": Client[F]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.client", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#client:org.http4s.client.Client[F]", "kind" : "implicit val"}, {"label" : "authToken", "tail" : ": Header", "member" : "pt.tecnico.dsi.openstack.common.services.Service.authToken", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#authToken:org.http4s.Header", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "pt\/tecnico\/dsi\/neutron\/services\/Subnets.html", "kind" : "class"}], "pt.tecnico" : [], "pt.tecnico.dsi.neutron.models" : [{"name" : "pt.tecnico.dsi.neutron.models.FloatingIp", "object" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp$.html", "members_object" : [{"label" : "Update", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.FloatingIp.Update", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp$.html#UpdateextendsProductwithSerializable", "kind" : "case class"}, {"label" : "Update", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.FloatingIp.Update", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp$.html#Update", "kind" : "object"}, {"label" : "Create", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.FloatingIp.Create", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp$.html#CreateextendsProductwithSerializable", "kind" : "case class"}, {"label" : "Create", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.FloatingIp.Create", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp$.html#Create", "kind" : "object"}, {"label" : "Read", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.FloatingIp.Read", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp$.html#ReadextendsIdentifiablewithProductwithSerializable", "kind" : "case class"}, {"label" : "Read", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.FloatingIp.Read", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp$.html#Read", "kind" : "object"}, {"label" : "PortForwarding", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.FloatingIp.PortForwarding", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp$.html#PortForwardingextendsProductwithSerializable", "kind" : "case class"}, {"label" : "PortForwarding", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.FloatingIp.PortForwarding", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp$.html#PortForwarding", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp.html", "kind" : "object", "members_trait" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (FloatingIp) => Boolean, msg: => Any): FloatingIp", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (FloatingIp) => Boolean): FloatingIp", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): FloatingIp", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): FloatingIp", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (FloatingIp, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (FloatingIp, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "Read", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.FloatingIp.Read", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp.html#Read=pt.tecnico.dsi.neutron.models.FloatingIp.Read", "kind" : "type"}, {"label" : "Create", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.FloatingIp.Create", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp.html#Create=pt.tecnico.dsi.neutron.models.FloatingIp.Create", "kind" : "type"}, {"label" : "Update", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.FloatingIp.Update", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp.html#Update=pt.tecnico.dsi.neutron.models.FloatingIp.Update", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/models\/FloatingIp.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "pt.tecnico.dsi.neutron.models.Model", "trait" : "pt\/tecnico\/dsi\/neutron\/models\/Model.html", "kind" : "trait", "members_trait" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Model.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Model) => Boolean, msg: => Any): Model", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Model.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Model) => Boolean): Model", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Model.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Model", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Model.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Model", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Model.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Model, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Model.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Model, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Model.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Model.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Model.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Model.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Model.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Model.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Model.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Model.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Model.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Model.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Model.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Model.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Model.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Model.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Model.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Model.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Model.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Model.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Model.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Model.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"member" : "pt.tecnico.dsi.neutron.models.Model.Update", "error" : "unsupported entity"}, {"member" : "pt.tecnico.dsi.neutron.models.Model.Read", "error" : "unsupported entity"}, {"member" : "pt.tecnico.dsi.neutron.models.Model.Create", "error" : "unsupported entity"}], "shortDescription" : ""}, {"name" : "pt.tecnico.dsi.neutron.models.Network", "object" : "pt\/tecnico\/dsi\/neutron\/models\/Network$.html", "members_object" : [{"label" : "Update", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.Network.Update", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network$.html#UpdateextendsProductwithSerializable", "kind" : "sealed case class"}, {"label" : "Update", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.Network.Update", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network$.html#Update", "kind" : "object"}, {"label" : "Create", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.Network.Create", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network$.html#CreateextendsProductwithSerializable", "kind" : "case class"}, {"label" : "Create", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.Network.Create", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network$.html#Create", "kind" : "object"}, {"label" : "Read", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.Network.Read", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network$.html#ReadextendsIdentifiablewithProductwithSerializable", "kind" : "sealed case class"}, {"label" : "Read", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.Network.Read", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network$.html#Read", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "pt\/tecnico\/dsi\/neutron\/models\/Network.html", "kind" : "object", "members_trait" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Network) => Boolean, msg: => Any): Network", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Network) => Boolean): Network", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Network", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Network", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Network, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Network, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "Read", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.Network.Read", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network.html#Read=pt.tecnico.dsi.neutron.models.Network.Read", "kind" : "type"}, {"label" : "Create", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.Network.Create", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network.html#Create=pt.tecnico.dsi.neutron.models.Network.Create", "kind" : "type"}, {"label" : "Update", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.Network.Update", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network.html#Update=pt.tecnico.dsi.neutron.models.Network.Update", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Network.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "pt.tecnico.dsi.neutron.models.Port", "object" : "pt\/tecnico\/dsi\/neutron\/models\/Port$.html", "members_object" : [{"label" : "Update", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.Port.Update", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port$.html#UpdateextendsProductwithSerializable", "kind" : "case class"}, {"label" : "Update", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.Port.Update", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port$.html#Update", "kind" : "object"}, {"label" : "Create", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.Port.Create", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port$.html#CreateextendsProductwithSerializable", "kind" : "case class"}, {"label" : "Create", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.Port.Create", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port$.html#Create", "kind" : "object"}, {"label" : "Read", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.Port.Read", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port$.html#ReadextendsIdentifiablewithProductwithSerializable", "kind" : "case class"}, {"label" : "Read", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.Port.Read", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port$.html#Read", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "pt\/tecnico\/dsi\/neutron\/models\/Port.html", "kind" : "object", "members_trait" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Port) => Boolean, msg: => Any): Port", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Port) => Boolean): Port", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Port", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Port", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Port, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Port, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "Read", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.Port.Read", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port.html#Read=pt.tecnico.dsi.neutron.models.Port.Read", "kind" : "type"}, {"label" : "Create", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.Port.Create", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port.html#Create=pt.tecnico.dsi.neutron.models.Port.Create", "kind" : "type"}, {"label" : "Update", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.Port.Update", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port.html#Update=pt.tecnico.dsi.neutron.models.Port.Update", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Port.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "pt.tecnico.dsi.neutron.models.Quota", "shortDescription" : "", "object" : "pt\/tecnico\/dsi\/neutron\/models\/Quota$.html", "members_object" : [{"label" : "Update", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.Quota.Update", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota$.html#UpdateextendsProductwithSerializable", "kind" : "case class"}, {"label" : "Update", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.Quota.Update", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota$.html#Update", "kind" : "object"}, {"label" : "decoder", "tail" : ": Decoder[Quota]", "member" : "pt.tecnico.dsi.neutron.models.Quota.decoder", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota$.html#decoder:io.circe.Decoder[pt.tecnico.dsi.neutron.models.Quota]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Quota) => Boolean, msg: => Any): Quota", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Quota) => Boolean): Quota", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Quota", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Quota", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Quota, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Quota, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "pt.tecnico.dsi.neutron.models.Quota#<init>", "error" : "unsupported entity"}, {"label" : "subnetpool", "tail" : ": Int", "member" : "pt.tecnico.dsi.neutron.models.Quota.subnetpool", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota.html#subnetpool:Int", "kind" : "val"}, {"label" : "subnet", "tail" : ": Int", "member" : "pt.tecnico.dsi.neutron.models.Quota.subnet", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota.html#subnet:Int", "kind" : "val"}, {"label" : "securityGroupRule", "tail" : ": Int", "member" : "pt.tecnico.dsi.neutron.models.Quota.securityGroupRule", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota.html#securityGroupRule:Int", "kind" : "val"}, {"label" : "securityGroup", "tail" : ": Int", "member" : "pt.tecnico.dsi.neutron.models.Quota.securityGroup", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota.html#securityGroup:Int", "kind" : "val"}, {"label" : "router", "tail" : ": Int", "member" : "pt.tecnico.dsi.neutron.models.Quota.router", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota.html#router:Int", "kind" : "val"}, {"label" : "rbacPolicy", "tail" : ": Int", "member" : "pt.tecnico.dsi.neutron.models.Quota.rbacPolicy", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota.html#rbacPolicy:Int", "kind" : "val"}, {"label" : "port", "tail" : ": Int", "member" : "pt.tecnico.dsi.neutron.models.Quota.port", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota.html#port:Int", "kind" : "val"}, {"label" : "network", "tail" : ": Int", "member" : "pt.tecnico.dsi.neutron.models.Quota.network", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota.html#network:Int", "kind" : "val"}, {"label" : "floatingip", "tail" : ": Int", "member" : "pt.tecnico.dsi.neutron.models.Quota.floatingip", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota.html#floatingip:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Quota.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "pt\/tecnico\/dsi\/neutron\/models\/Quota.html", "kind" : "object"}, {"name" : "pt.tecnico.dsi.neutron.models.Route", "shortDescription" : "", "object" : "pt\/tecnico\/dsi\/neutron\/models\/Route$.html", "members_object" : [{"label" : "codec", "tail" : ": Codec[Route]", "member" : "pt.tecnico.dsi.neutron.models.Route.codec", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Route$.html#codec:io.circe.Codec[pt.tecnico.dsi.neutron.models.Route]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Route$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Route$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Route$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Route$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Route$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Route$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Route$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Route$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Route$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Route$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Route$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Route$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Route$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Route$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Route$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Route$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Route$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Route$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Route$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Route.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Route) => Boolean, msg: => Any): Route", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Route.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Route) => Boolean): Route", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Route.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Route", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Route.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Route", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Route.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Route, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Route.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Route, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Route.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "pt.tecnico.dsi.neutron.models.Route#<init>", "error" : "unsupported entity"}, {"label" : "nexthop", "tail" : ": InetAddress", "member" : "pt.tecnico.dsi.neutron.models.Route.nexthop", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Route.html#nexthop:java.net.InetAddress", "kind" : "val"}, {"label" : "destination", "tail" : ": String", "member" : "pt.tecnico.dsi.neutron.models.Route.destination", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Route.html#destination:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Route.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Route.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Route.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Route.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Route.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Route.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Route.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Route.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Route.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Route.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Route.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Route.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Route.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Route.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Route.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Route.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Route.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "pt\/tecnico\/dsi\/neutron\/models\/Route.html", "kind" : "object"}, {"name" : "pt.tecnico.dsi.neutron.models.Router", "object" : "pt\/tecnico\/dsi\/neutron\/models\/Router$.html", "members_object" : [{"label" : "ConntrackHelper", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.Router.ConntrackHelper", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router$.html#ConntrackHelperextendsProductwithSerializable", "kind" : "case class"}, {"label" : "ConntrackHelper", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.Router.ConntrackHelper", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router$.html#ConntrackHelper", "kind" : "object"}, {"label" : "Update", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.Router.Update", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router$.html#UpdateextendsProductwithSerializable", "kind" : "case class"}, {"label" : "Update", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.Router.Update", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router$.html#Update", "kind" : "object"}, {"label" : "Create", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.Router.Create", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router$.html#CreateextendsProductwithSerializable", "kind" : "case class"}, {"label" : "Create", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.Router.Create", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router$.html#Create", "kind" : "object"}, {"label" : "Read", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.Router.Read", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router$.html#ReadextendsIdentifiablewithProductwithSerializable", "kind" : "case class"}, {"label" : "Read", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.Router.Read", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router$.html#Read", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "pt\/tecnico\/dsi\/neutron\/models\/Router.html", "kind" : "object", "members_trait" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Router) => Boolean, msg: => Any): Router", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Router) => Boolean): Router", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Router", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Router", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Router, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Router, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "Read", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.Router.Read", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router.html#Read=pt.tecnico.dsi.neutron.models.Router.Read", "kind" : "type"}, {"label" : "Create", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.Router.Create", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router.html#Create=pt.tecnico.dsi.neutron.models.Router.Create", "kind" : "type"}, {"label" : "Update", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.Router.Update", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router.html#Update=pt.tecnico.dsi.neutron.models.Router.Update", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Router.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "pt.tecnico.dsi.neutron.models.RouterInterface", "shortDescription" : "", "object" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface$.html", "members_object" : [{"label" : "Remove", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.RouterInterface.Remove", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface$.html#RemoveextendsProductwithSerializable", "kind" : "case class"}, {"label" : "Remove", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.RouterInterface.Remove", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface$.html#Remove", "kind" : "object"}, {"label" : "decoder", "tail" : ": Decoder[RouterInterface]", "member" : "pt.tecnico.dsi.neutron.models.RouterInterface.decoder", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface$.html#decoder:io.circe.Decoder[pt.tecnico.dsi.neutron.models.RouterInterface]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (RouterInterface) => Boolean, msg: => Any): RouterInterface", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (RouterInterface) => Boolean): RouterInterface", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): RouterInterface", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): RouterInterface", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (RouterInterface, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (RouterInterface, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "pt.tecnico.dsi.neutron.models.RouterInterface#<init>", "error" : "unsupported entity"}, {"label" : "tags", "tail" : ": List[String]", "member" : "pt.tecnico.dsi.neutron.models.RouterInterface.tags", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface.html#tags:List[String]", "kind" : "val"}, {"label" : "networkId", "tail" : ": String", "member" : "pt.tecnico.dsi.neutron.models.RouterInterface.networkId", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface.html#networkId:String", "kind" : "val"}, {"label" : "portId", "tail" : ": String", "member" : "pt.tecnico.dsi.neutron.models.RouterInterface.portId", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface.html#portId:String", "kind" : "val"}, {"label" : "projectId", "tail" : ": String", "member" : "pt.tecnico.dsi.neutron.models.RouterInterface.projectId", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface.html#projectId:String", "kind" : "val"}, {"label" : "subnetId", "tail" : ": String", "member" : "pt.tecnico.dsi.neutron.models.RouterInterface.subnetId", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface.html#subnetId:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "pt\/tecnico\/dsi\/neutron\/models\/RouterInterface.html", "kind" : "object"}, {"name" : "pt.tecnico.dsi.neutron.models.SecurityGroup", "object" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup$.html", "members_object" : [{"label" : "Read", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.SecurityGroup.Read", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup$.html#ReadextendsIdentifiablewithProductwithSerializable", "kind" : "case class"}, {"label" : "Read", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.SecurityGroup.Read", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup$.html#Read", "kind" : "object"}, {"label" : "Create", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.SecurityGroup.Create", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup$.html#CreateextendsProductwithSerializable", "kind" : "case class"}, {"label" : "Create", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.SecurityGroup.Create", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup$.html#Create", "kind" : "object"}, {"label" : "Update", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.SecurityGroup.Update", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup$.html#UpdateextendsProductwithSerializable", "kind" : "case class"}, {"label" : "Update", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.SecurityGroup.Update", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup$.html#Update", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup.html", "kind" : "object", "members_trait" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SecurityGroup) => Boolean, msg: => Any): SecurityGroup", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SecurityGroup) => Boolean): SecurityGroup", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): SecurityGroup", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): SecurityGroup", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (SecurityGroup, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (SecurityGroup, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "Read", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.SecurityGroup.Read", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup.html#Read=pt.tecnico.dsi.neutron.models.SecurityGroup.Read", "kind" : "type"}, {"label" : "Create", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.SecurityGroup.Create", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup.html#Create=pt.tecnico.dsi.neutron.models.SecurityGroup.Create", "kind" : "type"}, {"label" : "Update", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.SecurityGroup.Update", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup.html#Update=pt.tecnico.dsi.neutron.models.SecurityGroup.Update", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroup.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "pt.tecnico.dsi.neutron.models.SecurityGroupRule", "shortDescription" : "", "object" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule$.html", "members_object" : [{"label" : "Create", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.SecurityGroupRule.Create", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule$.html#CreateextendsProductwithSerializable", "kind" : "case class"}, {"label" : "Create", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.SecurityGroupRule.Create", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule$.html#Create", "kind" : "object"}, {"label" : "decoder", "tail" : ": Decoder[SecurityGroupRule]", "member" : "pt.tecnico.dsi.neutron.models.SecurityGroupRule.decoder", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule$.html#decoder:io.circe.Decoder[pt.tecnico.dsi.neutron.models.SecurityGroupRule]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SecurityGroupRule) => Boolean, msg: => Any): SecurityGroupRule", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SecurityGroupRule) => Boolean): SecurityGroupRule", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): SecurityGroupRule", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): SecurityGroupRule", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (SecurityGroupRule, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (SecurityGroupRule, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "pt.tecnico.dsi.neutron.models.SecurityGroupRule#<init>", "error" : "unsupported entity"}, {"label" : "links", "tail" : ": List[Link]", "member" : "pt.tecnico.dsi.neutron.models.SecurityGroupRule.links", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule.html#links:List[pt.tecnico.dsi.openstack.common.models.Link]", "kind" : "val"}, {"label" : "revisionNumber", "tail" : ": Integer", "member" : "pt.tecnico.dsi.neutron.models.SecurityGroupRule.revisionNumber", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule.html#revisionNumber:Integer", "kind" : "val"}, {"label" : "portRangeMax", "tail" : ": Integer", "member" : "pt.tecnico.dsi.neutron.models.SecurityGroupRule.portRangeMax", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule.html#portRangeMax:Integer", "kind" : "val"}, {"label" : "securityGroupId", "tail" : ": String", "member" : "pt.tecnico.dsi.neutron.models.SecurityGroupRule.securityGroupId", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule.html#securityGroupId:String", "kind" : "val"}, {"label" : "ethertype", "tail" : ": String", "member" : "pt.tecnico.dsi.neutron.models.SecurityGroupRule.ethertype", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule.html#ethertype:String", "kind" : "val"}, {"label" : "protocol", "tail" : ": String", "member" : "pt.tecnico.dsi.neutron.models.SecurityGroupRule.protocol", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule.html#protocol:String", "kind" : "val"}, {"label" : "direction", "tail" : ": String", "member" : "pt.tecnico.dsi.neutron.models.SecurityGroupRule.direction", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule.html#direction:String", "kind" : "val"}, {"label" : "description", "tail" : ": String", "member" : "pt.tecnico.dsi.neutron.models.SecurityGroupRule.description", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule.html#description:String", "kind" : "val"}, {"label" : "remoteGroupId", "tail" : ": String", "member" : "pt.tecnico.dsi.neutron.models.SecurityGroupRule.remoteGroupId", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule.html#remoteGroupId:String", "kind" : "val"}, {"label" : "portRangeMin", "tail" : ": Integer", "member" : "pt.tecnico.dsi.neutron.models.SecurityGroupRule.portRangeMin", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule.html#portRangeMin:Integer", "kind" : "val"}, {"label" : "remoteIpPrefix", "tail" : ": String", "member" : "pt.tecnico.dsi.neutron.models.SecurityGroupRule.remoteIpPrefix", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule.html#remoteIpPrefix:String", "kind" : "val"}, {"label" : "updatedAt", "tail" : ": LocalDateTime", "member" : "pt.tecnico.dsi.neutron.models.SecurityGroupRule.updatedAt", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule.html#updatedAt:java.time.LocalDateTime", "kind" : "val"}, {"label" : "createdAt", "tail" : ": LocalDateTime", "member" : "pt.tecnico.dsi.neutron.models.SecurityGroupRule.createdAt", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule.html#createdAt:java.time.LocalDateTime", "kind" : "val"}, {"label" : "projectId", "tail" : ": String", "member" : "pt.tecnico.dsi.neutron.models.SecurityGroupRule.projectId", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule.html#projectId:String", "kind" : "val"}, {"label" : "id", "tail" : ": String", "member" : "pt.tecnico.dsi.neutron.models.SecurityGroupRule.id", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule.html#id:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "linksMap", "tail" : ": Map[String, Uri]", "member" : "pt.tecnico.dsi.openstack.common.models.Identifiable.linksMap", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule.html#linksMap:Map[String,org.http4s.Uri]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "pt\/tecnico\/dsi\/neutron\/models\/SecurityGroupRule.html", "kind" : "object"}, {"name" : "pt.tecnico.dsi.neutron.models.Subnet", "object" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet$.html", "members_object" : [{"label" : "Read", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.Subnet.Read", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet$.html#ReadextendsIdentifiablewithProductwithSerializable", "kind" : "case class"}, {"label" : "Read", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.Subnet.Read", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet$.html#Read", "kind" : "object"}, {"label" : "Update", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.Subnet.Update", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet$.html#UpdateextendsProductwithSerializable", "kind" : "case class"}, {"label" : "Update", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.Subnet.Update", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet$.html#Update", "kind" : "object"}, {"label" : "Create", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.Subnet.Create", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet$.html#CreateextendsProductwithSerializable", "kind" : "case class"}, {"label" : "Create", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.Subnet.Create", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet$.html#Create", "kind" : "object"}, {"label" : "Ipv6Mode", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.Subnet.Ipv6Mode", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet$.html#Ipv6Mode", "kind" : "case object"}, {"label" : "Ipv6Mode", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.Subnet.Ipv6Mode", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet$.html#Ipv6ModeextendsEnumEntry", "kind" : "sealed trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet.html", "kind" : "object", "members_trait" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Subnet) => Boolean, msg: => Any): Subnet", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Subnet) => Boolean): Subnet", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Subnet", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Subnet", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Subnet, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Subnet, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "Read", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.Subnet.Read", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet.html#Read=pt.tecnico.dsi.neutron.models.Subnet.Read", "kind" : "type"}, {"label" : "Create", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.Subnet.Create", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet.html#Create=pt.tecnico.dsi.neutron.models.Subnet.Create", "kind" : "type"}, {"label" : "Update", "tail" : "", "member" : "pt.tecnico.dsi.neutron.models.Subnet.Update", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet.html#Update=pt.tecnico.dsi.neutron.models.Subnet.Update", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pt\/tecnico\/dsi\/neutron\/models\/Subnet.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}]};